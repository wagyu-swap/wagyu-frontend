{"version":3,"sources":["../node_modules/lodash/max.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","views/Home/components/WagyuHarvestBalance.tsx","views/Home/components/WagyuWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/WagyuWinnings.tsx","views/Home/components/LotteryJackpot.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/WagyuStats.tsx","views/Home/components/TotalValueLockedCard.tsx","hooks/api.ts","views/Home/components/EarnAPRCard.tsx","views/Home/components/WinCard.tsx","views/Home/Home.tsx"],"names":["baseExtremum","require","baseGt","identity","module","exports","array","length","undefined","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","useFarmsWithBalance","useState","farmsWithBalances","setFarmsWithBalances","account","useWeb3React","fastRefresh","useRefresh","useEffect","a","calls","farmsConfig","map","farm","address","getMasterChefAddress","name","params","pid","multicall","masterChefABI","rawResults","results","index","balance","BigNumber","fetchBalances","then","useAllEarnings","balances","setBalance","res","fetchAllBalances","Block","styled","div","WagyuHarvestBalance","t","useTranslation","earningsSum","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","toNumber","wagyuPriceUsd","usePriceWagyuVusdt","earningsVusdt","multipliedBy","CardValue","lineHeight","gt","CardVusdtValue","color","style","WagyuWalletBalance","wagyuBalance","useTokenBalance","getWagyuAddress","wagyuPriceVusdt","vusdtBalance","getBalanceNumber","decimals","fontSize","StyledFarmStakingCard","Card","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","farmsWithBalance","masterChefContract","useMasterchef","balancesWithValue","filter","balanceType","harvestAllFarms","useCallback","farmWithBalance","harvest","scale","mb","src","alt","width","height","id","disabled","onClick","count","UnlockButton","WagyuWinnings","claimAmount","wagyuAmount","claimAmountVusdt","LotteryJackpot","bold","StyledLotteryCard","LotteryCard","lotteryHasDrawn","useGetLotteryHasDrawn","requestClaim","setRequestedClaim","allowance","useLotteryAllowance","useModal","PurchaseWarningModal","onPresentApprove","useTotalClaim","setLastUpdated","onMultiClaim","useMultiClaimLottery","useApproval","handleApprove","requestedApproval","handleClaim","console","error","BuyTicketModal","max","onPresentBuy","marginRight","variant","StyledWagyuStats","Row","WagyuStats","totalSupply","useTotalSupply","burnedBalance","useBurnedBalance","wagyuSupply","amountPerBlock","useWagyuPerBlock","wagyuPerBlock","StyledTotalValueLockedCard","TotalValueLockedCard","data","setData","fetch","response","json","responseData","fetchData","useGetStats","tvl","toLocaleString","maximumFractionDigits","mediaQueries","lg","CardMidContent","Heading","attrs","EarnAPRCard","isFetchingFarmData","setIsFetchingFarmData","farmsLP","useFarms","wagyuPrice","dispatch","useAppDispatch","isSubscribed","fetchFarmsPublicDataAsync","nonArchivedFarms","nonArchivedFarm","fetchFarmData","highestApr","useMemo","aprs","multiplier","lpTotalInQuoteToken","quoteToken","vusdtPrice","totalLiquidity","times","getFarmApr","poolWeight","maxApr","aprText","split","earnUpTo","InFarms","exact","activeClassName","to","animation","justifyContent","mt","WinCard","Hero","xl","Cards","BaseLayout","sm","CTACards","StyledImage","Image","md","Home","as","Page","FarmStakingCard"],"mappings":"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","file":"static/js/8.fbb570b3.chunk.js","sourcesContent":["var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nmodule.exports = max;\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingWagyu',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\r\n\r\n      setFarmsWithBalances(results)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances().then()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useAllEarnings = () => {\r\n  const [balances, setBalance] = useState([])\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingWagyu',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const res = await multicall(masterChefABI, calls)\r\n\r\n      setBalance(res)\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllBalances().then()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return balances\r\n}\r\n\r\nexport default useAllEarnings\r\n","import React from 'react'\r\nimport { Text } from '@wagyu-swap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useAllEarnings from 'hooks/useAllEarnings'\r\nimport { usePriceWagyuVusdt } from 'state/hooks'\r\nimport styled from 'styled-components'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport CardValue from './CardValue'\r\nimport CardVusdtValue from './CardVusdtValue'\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst WagyuHarvestBalance = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const allEarnings = useAllEarnings()\r\n  const earningsSum = allEarnings.reduce((accum, earning) => {\r\n    const earningNumber = new BigNumber(earning)\r\n    if (earningNumber.eq(0)) {\r\n      return accum\r\n    }\r\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\r\n  }, 0)\r\n  const wagyuPriceUsd = usePriceWagyuVusdt()\r\n  const earningsVusdt = new BigNumber(earningsSum).multipliedBy(wagyuPriceUsd).toNumber()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\r\n        {t('Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Block>\r\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\r\n      {wagyuPriceUsd.gt(0) && <CardVusdtValue value={earningsVusdt} />}\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default WagyuHarvestBalance\r\n","import React from 'react'\r\nimport { Text } from '@wagyu-swap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getWagyuAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { usePriceWagyuVusdt } from 'state/hooks'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport CardValue from './CardValue'\r\nimport CardVusdtValue from './CardVusdtValue'\r\n\r\nconst WagyuWalletBalance = () => {\r\n  const { t } = useTranslation()\r\n  const { balance: wagyuBalance } = useTokenBalance(getWagyuAddress())\r\n  const wagyuPriceVusdt = usePriceWagyuVusdt()\r\n  const vusdtBalance = new BigNumber(getBalanceNumber(wagyuBalance)).multipliedBy(wagyuPriceVusdt).toNumber()\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\r\n        {t('Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CardValue value={getBalanceNumber(wagyuBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\r\n      {wagyuPriceVusdt.gt(0) ? <CardVusdtValue value={vusdtBalance} /> : <br />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WagyuWalletBalance\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button } from '@wagyu-swap-libs/uikit'\r\nimport { harvest } from 'utils/callHelpers'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport WagyuHarvestBalance from './WagyuHarvestBalance'\r\nimport WagyuWalletBalance from './WagyuWalletBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url('/images/wagyu-bg.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const masterChefContract = useMasterchef()\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const farmWithBalance of balancesWithValue) {\r\n      try {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await harvest(masterChefContract, farmWithBalance.pid, account)\r\n      } catch (error) {\r\n        // TODO: find a way to handle when the user rejects transaction or it fails\r\n      }\r\n    }\r\n    setPendingTx(false)\r\n  }, [account, balancesWithValue, masterChefContract])\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Farms & Staking')}\r\n        </Heading>\r\n        <CardImage src=\"/images/wagyu.svg\" alt=\"wagyu logo\" width={64} height={64} />\r\n        <Block>\r\n          <Label>{t('WAGYU to Harvest')}:</Label>\r\n          <WagyuHarvestBalance />\r\n        </Block>\r\n        <Block>\r\n          <Label>{t('WAGYU in Wallet')}:</Label>\r\n          <WagyuWalletBalance />\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n            <Button\r\n              id=\"harvest-all\"\r\n              disabled={balancesWithValue.length <= 0 || pendingTx}\r\n              onClick={harvestAllFarms}\r\n              width=\"100%\"\r\n            >\r\n              {pendingTx\r\n                ? t('Collecting WAGYU')\r\n                : t('Harvest all (%count%)', {\r\n                    count: balancesWithValue.length,\r\n                  })}\r\n            </Button>\r\n          ) : (\r\n            <UnlockButton width=\"100%\" />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n","import React from 'react'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { usePriceWagyuVusdt } from 'state/hooks'\r\nimport { Text } from '@wagyu-swap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CardValue from './CardValue'\r\nimport CardVusdtValue from './CardVusdtValue'\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\ninterface WagyuWinningsProps {\r\n  claimAmount: BigNumber\r\n}\r\n\r\nconst WagyuWinnings: React.FC<WagyuWinningsProps> = ({ claimAmount }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const wagyuAmount = getBalanceNumber(claimAmount)\r\n  const wagyuPriceVusdt = usePriceWagyuVusdt()\r\n  const claimAmountVusdt = new BigNumber(wagyuAmount).multipliedBy(wagyuPriceVusdt).toNumber()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\r\n        {t('Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Block>\r\n      <CardValue value={wagyuAmount} lineHeight=\"1.5\" />\r\n      {wagyuPriceVusdt.gt(0) && <CardVusdtValue value={claimAmountVusdt} decimals={2} />}\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default WagyuWinnings\r\n","import React from 'react'\r\nimport { Text } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst LotteryJackpot = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Text bold fontSize=\"24px\" style={{ lineHeight: '1.5' }}>\r\n        {t('Coming Soon')}\r\n      </Text>\r\n      <br />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LotteryJackpot\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button, useModal } from '@wagyu-swap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWagyuAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport { useApproval } from 'hooks/useApproval'\r\nimport PurchaseWarningModal from 'views/Lottery/components/TicketCard/PurchaseWarningModal'\r\nimport BuyTicketModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport WagyuWinnings from './WagyuWinnings'\r\nimport LotteryJackpot from './LotteryJackpot'\r\n\r\nconst StyledLotteryCard = styled(Card)`\r\n  background-image: url('/images/wagyu-ticket-bg.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  margin-top: 24px;\r\n  button {\r\n    flex: 1 0 50%;\r\n  }\r\n`\r\n\r\nconst LotteryCard = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const [requestClaim, setRequestedClaim] = useState(false)\r\n  const { t } = useTranslation()\r\n  const allowance = useLotteryAllowance()\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const { claimAmount, setLastUpdated } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const { balance: wagyuBalance } = useTokenBalance(getWagyuAddress())\r\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n        setLastUpdated()\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim, setLastUpdated])\r\n\r\n  const renderLotteryTicketButtonBuyOrApprove = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {t('Approve WAGYU')}\r\n        </Button>\r\n      )\r\n    }\r\n    if (lotteryHasDrawn) {\r\n      return <Button disabled> {t('On sale soon')}</Button>\r\n    }\r\n    return (\r\n      <Button id=\"dashboard-buy-tickets\" variant=\"secondary\" onClick={onPresentBuy}>\r\n        {t('Buy Tickets')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={wagyuBalance} />)\r\n\r\n  return (\r\n    <StyledLotteryCard>\r\n      <CardBody>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Your Lottery Winnings')}\r\n        </Heading>\r\n        <CardImage src=\"/images/wagyu-ticket.svg\" alt=\"wagyu logo\" width={64} height={64} />\r\n        <Block>\r\n          <Label>{t('WAGYU to Collect')}:</Label>\r\n          <WagyuWinnings claimAmount={claimAmount} />\r\n        </Block>\r\n        <Block>\r\n          <Label>{t('Total jackpot this round')}:</Label>\r\n          <LotteryJackpot />\r\n        </Block>\r\n        {account ? (\r\n          <Actions>\r\n            <Button\r\n              id=\"dashboard-collect-winnings\"\r\n              disabled={getBalanceNumber(claimAmount) === 0 || requestClaim}\r\n              onClick={handleClaim}\r\n              style={{ marginRight: '8px' }}\r\n            >\r\n              {t('Collect Winnings')}\r\n            </Button>\r\n            {renderLotteryTicketButtonBuyOrApprove()}\r\n          </Actions>\r\n        ) : (\r\n          <Actions>\r\n            <UnlockButton width=\"100%\" />\r\n          </Actions>\r\n        )}\r\n      </CardBody>\r\n    </StyledLotteryCard>\r\n  )\r\n}\r\n\r\nexport default LotteryCard\r\n","import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@wagyu-swap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance, useWagyuPerBlock } from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getWagyuAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\n\r\nconst StyledWagyuStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst WagyuStats = () => {\r\n  const { t } = useTranslation()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getWagyuAddress()))\r\n  const wagyuSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\r\n  const amountPerBlock = useWagyuPerBlock()\r\n  const wagyuPerBlock = amountPerBlock ? getBalanceNumber(amountPerBlock) : 0;\r\n\r\n  return (\r\n    <StyledWagyuStats>\r\n      <CardBody>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Wagyu Stats')}\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{t('Total Wagyu Supply')}</Text>\r\n          {wagyuSupply && <CardValue fontSize=\"14px\" value={wagyuSupply} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{t('Total Wagyu Burned')}</Text>\r\n          <CardValue fontSize=\"14px\" decimals={0} value={burnedBalance} />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{t('New Wagyu/block')}</Text>\r\n          <CardValue fontSize=\"14px\" decimals={3} value={wagyuPerBlock} />\r\n        </Row>\r\n      </CardBody>\r\n    </StyledWagyuStats>\r\n  )\r\n}\r\n\r\nexport default WagyuStats\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Heading, Skeleton, Text } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetStats } from 'hooks/api'\r\n\r\nconst StyledTotalValueLockedCard = styled(Card)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n`\r\n\r\nconst TotalValueLockedCard = () => {\r\n  const { t } = useTranslation()\r\n  const data = useGetStats()\r\n  const tvl = data ? data.tvl.toLocaleString('en-US', { maximumFractionDigits: 0 }) : null\r\n\r\n  return (\r\n    <StyledTotalValueLockedCard>\r\n      <CardBody>\r\n        <Heading scale=\"lg\" mb=\"24px\">\r\n          {t('Total Value Locked (TVL)')}\r\n        </Heading>\r\n        {data ? (\r\n          <>\r\n            <Heading scale=\"xl\">{`$${tvl}`}</Heading>\r\n            <Text color=\"textSubtle\">{t('Across all LPs')}</Text>\r\n          </>\r\n        ) : (\r\n          <Skeleton height={66} />\r\n        )}\r\n      </CardBody>\r\n    </StyledTotalValueLockedCard>\r\n  )\r\n}\r\n\r\nexport default TotalValueLockedCard\r\n","import { useEffect, useState } from 'react'\r\n\r\n/* eslint-disable camelcase */\r\nexport interface DeBankTvlResponse {\r\n  id: string\r\n  chain: string\r\n  name: string\r\n  site_url: string\r\n  logo_url: string\r\n  has_supported_portfolio: boolean\r\n  tvl: number\r\n}\r\n\r\nexport const useGetStats = () => {\r\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://wagyu-api.vercel.app/api/tvl')\r\n        const responseData: DeBankTvlResponse = await response.json()\r\n        setData(responseData);\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData().then()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@wagyu-swap-libs/uikit'\r\nimport max from 'lodash/max'\r\nimport { NavLink } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { useFarms, usePriceWagyuVusdt } from 'state/hooks'\r\nimport { fetchFarmsPublicDataAsync, nonArchivedFarms } from 'state/farms'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { getLotteryAddress } from '../../../utils/addressHelpers'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n\r\n  transition: opacity 200ms;\r\n  &:hover {\r\n    opacity: 0.65;\r\n  }\r\n`\r\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\r\n  line-height: 44px;\r\n`\r\nconst EarnAPRCard = () => {\r\n  const [isFetchingFarmData, setIsFetchingFarmData] = useState(true)\r\n  const { t } = useTranslation()\r\n  const { data: farmsLP } = useFarms()\r\n  const wagyuPrice = usePriceWagyuVusdt()\r\n  const dispatch = useAppDispatch()\r\n\r\n  // Fetch farm data once to get the max APR\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n    const fetchFarmData = async () => {\r\n      try {\r\n        await dispatch(fetchFarmsPublicDataAsync(nonArchivedFarms.map((nonArchivedFarm) => nonArchivedFarm.pid)))\r\n      } finally {\r\n        if (isSubscribed) {\r\n          setIsFetchingFarmData(false)\r\n        }\r\n      }\r\n    }\r\n    fetchFarmData().then();\r\n    return() => {\r\n      isSubscribed = false\r\n    }\r\n  }, [dispatch, setIsFetchingFarmData])\r\n\r\n  const highestApr = useMemo(() => {\r\n    if (wagyuPrice.gt(0)) {\r\n      const aprs = farmsLP.map((farm) => {\r\n        // Filter inactive farms, because their theoretical APR is super high. In practice, it's 0.\r\n        if (farm.pid !== 0 && farm.multiplier !== '0X' && farm.lpTotalInQuoteToken && farm.quoteToken.vusdtPrice) {\r\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.vusdtPrice)\r\n          return getFarmApr(new BigNumber(farm.poolWeight), wagyuPrice, totalLiquidity)\r\n        }\r\n        return null\r\n      })\r\n\r\n      const maxApr = max(aprs)\r\n      return maxApr?.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n    }\r\n    return null\r\n  }, [wagyuPrice, farmsLP])\r\n\r\n  const aprText = highestApr || '-'\r\n  const earnAprText = t('Earn up to %highestApr% APR in Farms', { highestApr: aprText })\r\n  const [earnUpTo, InFarms] = earnAprText.split(aprText)\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apr-cta\">\r\n        <CardBody>\r\n          <Heading color=\"contrast\" scale=\"lg\">\r\n            {earnUpTo}\r\n          </Heading>\r\n          <CardMidContent color=\"#7645d9\">\r\n            {highestApr && !isFetchingFarmData ? (\r\n              `${highestApr}%`\r\n            ) : (\r\n              <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\r\n            )}\r\n          </CardMidContent>\r\n          <Flex justifyContent=\"space-between\">\r\n            <Heading color=\"contrast\" scale=\"lg\">\r\n              {InFarms}\r\n            </Heading>\r\n            <ArrowForwardIcon mt={30} color=\"primary\" />\r\n          </Flex>\r\n        </CardBody>\r\n      </NavLink>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default EarnAPRCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@wagyu-swap-libs/uikit'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n\r\n  transition: opacity 200ms;\r\n  &:hover {\r\n    opacity: 0.65;\r\n  }\r\n`\r\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\r\n  line-height: 44px;\r\n`\r\nconst WinCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <NavLink exact activeClassName=\"active\" to=\"/lottery\" id=\"lottery-pot-cta\">\r\n        <CardBody>\r\n          <Heading color=\"contrast\" scale=\"lg\">\r\n            {t('Lottery')}\r\n          </Heading>\r\n          <CardMidContent color=\"#7645d9\">{t('We are ready!')}</CardMidContent>\r\n          <Flex justifyContent=\"space-between\">\r\n            <Heading color=\"contrast\" scale=\"lg\" />\r\n            <ArrowForwardIcon mt={30} color=\"primary\" />\r\n          </Flex>\r\n        </CardBody>\r\n      </NavLink>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default WinCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout, Heading, Image, Text } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Page from 'components/layout/Page'\r\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\r\nimport LotteryCard from 'views/Home/components/LotteryCard'\r\nimport WagyuStats from 'views/Home/components/WagyuStats'\r\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\r\nimport EarnAPRCard from 'views/Home/components/EarnAPRCard'\r\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\r\nimport WinCard from 'views/Home/components/WinCard'\r\n\r\nconst Hero = styled.div`\r\n  background-image: url('/images/background.png');\r\n  background-position: center top;\r\n  background-repeat: no-repeat;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  margin: auto;\r\n  margin-bottom: 32px;\r\n  padding: 16px 0;\r\n  text-align: center;\r\n  \r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: flex;\r\n    flex-direction: row;    \r\n    background-image: url('/images/background.png');\r\n    background-position: center top;\r\n    background-repeat: no-repeat;\r\n    height: 165px;\r\n    padding-top: 0;\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n    text-shadow: 0px 1px 0px black;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    display: flex;\r\n    flex-direction: row;    \r\n    background-image: url('/images/background.png');\r\n    background-position: center top;\r\n    background-repeat: no-repeat;\r\n    background-size: 100%;\r\n    height: 165px;\r\n    padding-top: 0;\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n    text-shadow: 0px 1px 0px black;\r\n  }\r\n`\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  margin-bottom: 24px;\r\n  grid-gap: 24px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin-bottom: 32px;\r\n    grid-gap: 32px;\r\n\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst CTACards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 24px;\r\n  grid-gap: 24px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin-bottom: 32px;\r\n    grid-gap: 32px;\r\n\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\nconst StyledImage = styled(Image)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const bold = true;\r\n\r\n  return (\r\n    <>\r\n      <Hero>\r\n        <StyledImage src=\"/images/left-wagyu.svg\" alt=\"Wagyu\" width={160} height={120} />\r\n        <div>\r\n          <Heading as=\"h1\" scale=\"xl\" mb=\"24px\" color=\"invertedContrast\">\r\n            {t('WagyuSwap')}\r\n          </Heading>\r\n          <Text bold={bold} color=\"invertedContrast\">{t('The #1 AMM and yield farm on Velas Chain.')}</Text>\r\n        </div>\r\n        <StyledImage src=\"/images/right-wagyu.svg\" alt=\"Wagyu\" width={160} height={120} />\r\n      </Hero>\r\n      <Page>\r\n        <div>\r\n          <Cards>\r\n            <FarmStakingCard />\r\n            <LotteryCard />\r\n          </Cards>\r\n          <CTACards>\r\n            <EarnAPRCard />\r\n            <WinCard />\r\n          </CTACards>\r\n          <Cards>\r\n            <WagyuStats />\r\n            <TotalValueLockedCard />\r\n          </Cards>\r\n        </div>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"sourceRoot":""}
