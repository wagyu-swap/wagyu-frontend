{"version":3,"sources":["views/Farms/components/types.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx","views/Home/components/CardValue.tsx","views/Home/components/CardVusdtValue.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx"],"names":["ViewMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wvlxAddressString","getWvlxAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","Wrapper","styled","div","StyledLinkExternal","LinkExternal","DetailsSection","velasScanAddress","removed","infoAddress","totalValueFormatted","lpLabel","addLiquidityUrl","t","useTranslation","justifyContent","width","height","href","symbol","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","alignItems","mb","src","alt","flexDirection","split","variant","StyledTokenInput","theme","colors","input","isWarning","shadows","warning","inset","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","onChange","onSelectMax","value","inputTitle","isBalanceZero","style","position","pl","fontSize","balance","balanceNumber","Number","toLocaleString","undefined","maximumFractionDigits","displayBalance","pattern","inputMode","step","min","placeholder","scale","onClick","mr","color","bold","external","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","valNumber","BigNumber","fullBalanceNumber","handleChange","useCallback","e","currentTarget","validity","valid","replace","handleSelectMax","title","ModalActions","disabled","isFinite","eq","gt","a","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","pid","onStake","useStake","onUnstake","useUnstake","location","useLocation","dispatch","useAppDispatch","account","useWeb3React","handleStake","amount","fetchFarmUserDataAsync","pids","handleUnstake","stakedBalanceNumber","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","some","item","pathname","includes","HarvestAction","earnings","onReward","useHarvest","wagyuPrice","usePriceWagyuVusdt","rawEarningsBalance","earningsVusdt","multipliedBy","toNumber","CardVusdtValue","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","allowanceAsString","tokenBalanceAsString","stakedBalanceAsString","earningsAsString","lpAddress","getAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getVls20Contract","onApprove","useApprove","handleApprove","console","error","textTransform","pr","mt","UnlockButton","ApyButton","apr","ApyCalculatorModal","linkLabel","tokenPrice","linkHref","onPresentApyModal","event","stopPropagation","ml","AccentGradient","keyframes","StyledCardAccent","primaryBright","secondary","FCard","props","card","background","isPromotedFarm","radii","Divider","cardBorder","ExpandingWrapper","expanded","FarmCard","showExpandableSection","setShowExpandableSection","toLocaleLowerCase","liquidity","earnLabel","dual","farmAPR","liquidityUrlPathParts","quoteToken","address","token","BASE_ADD_LIQUIDITY_URL","isCommunity","display","CardActionsContainer","ExpandableSectionButton","getVelasScanAddressUrl","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","IconImage","Image","Farm","image","label","useFarmUser","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","primary","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","ref","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","Title","Subtle","ActionContent","Staked","earningsBigNumber","isZero","useCountUp","start","end","duration","separator","decimals","countUp","update","updateValue","useRef","useEffect","current","marginBottom","marginTop","expandAnimation","collapseAnimation","css","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","isActive","velas","StakedAction","Label","ContentContainer","CellLayout","children","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","useDelayedUnmount","toggleActionPanel","isXs","tableSchema","columnNames","map","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Farms","path","useFarms","farmsLP","userDataLoaded","query","setQuery","usePersistState","setViewMode","sortOption","setSortOption","isArchived","isInactive","usePollFarmsData","stakedOnly","setStakedOnly","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","vusdtPrice","totalLiquidity","times","getFarmApr","poolWeight","lowercaseQuery","latinise","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","farms","orderBy","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","PageHeader","Page","checked","length","Select","options","option","marginLeft","SearchInput","target","sort","b","exact","renderContent","CardValue","lineHeight","prefix","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child","i","role","defaultProps"],"mappings":"+QA+FYA,E,uRChFGC,GAXkB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,aAE/CC,EAAoBC,eACpBC,EAAkCJ,EAAoBA,EAF5CK,KAEyE,KACnFC,EAA6BL,EAAeA,EAHlCI,KAG0D,KAGpEE,EAAcD,GAAsBA,IAAuBJ,EAA4BI,EAAR,MACrF,MAAM,GAAN,OAFGF,GAA2BA,IAA4BF,EAA4BE,EAAR,MAE9E,YAAuBG,I,QCEnBC,GAAUC,KAAOC,IAAV,kDAIPC,GAAqBF,aAAOG,KAAPH,CAAH,kDA4BTI,GAxB0C,SAAC,GAOnD,IANLC,EAMI,EANJA,iBAEAC,GAII,EALJC,YAKI,EAJJD,SACAE,EAGI,EAHJA,oBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEQC,EAAMC,eAAND,EAER,OACE,gBAACZ,GAAD,WACE,gBAAC,KAAD,CAAMc,eAAe,gBAArB,UACE,gBAAC,KAAD,WAAOF,EAAE,mBAAT,OACCH,EAAsB,eAAC,KAAD,UAAOA,IAA8B,eAAC,KAAD,CAAUM,MAAO,GAAIC,OAAQ,SAEzFT,GACA,eAACJ,GAAD,CAAoBc,KAAMN,EAA1B,SAA4CC,EAAE,eAAgB,CAAEM,OAAQR,MAE1E,eAACP,GAAD,CAAoBc,KAAMX,EAA1B,SAA6CM,EAAE,uB,UC5B/CZ,GAAUC,aAAOkB,KAAPlB,CAAH,mEAMPmB,GAAgBnB,aAAOoB,KAAPpB,CAAH,kDAyBJqB,GArBuC,SAAC,GAMhD,IALLZ,EAKI,EALJA,QACAa,EAII,EAJJA,WACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,UACAC,EACI,EADJA,YAEA,OACE,gBAAC,GAAD,CAASZ,eAAe,gBAAgBa,WAAW,SAASC,GAAG,OAA/D,UACE,eAAC,KAAD,CAAOC,IAAG,wBAAmBJ,EAAnB,QAAoCK,IAAKJ,EAAaX,MAAO,GAAIC,OAAQ,KACnF,gBAAC,KAAD,CAAMe,cAAc,SAASJ,WAAW,WAAxC,UACE,eAAC,KAAD,CAASC,GAAG,MAAZ,SAAmBlB,EAAQsB,MAAM,KAAK,KACtC,gBAAC,KAAD,CAAMlB,eAAe,SAArB,UACGU,EAAkB,eAAC,KAAD,IAAmB,eAAC,KAAD,IACtC,eAACJ,GAAD,CAAea,QAAQ,UAAvB,SAAkCV,c,mHCbtCW,GAAmBjC,KAAOC,IAAV,2MAGA,qBAAGiC,MAAkBC,OAAOC,SAX7B,SAAC,GAAkC,IAAD,IAA/BC,iBAA+B,SAAZH,EAAY,EAAZA,MACzC,OAAIG,EACKH,EAAMI,QAAQC,QAGhBL,EAAMI,QAAQE,SASZ,qBAAGN,MAAkBC,OAAOM,QAKjCC,GAAc1C,aAAO2C,KAAP3C,CAAH,2KAMb,qBAAGkC,MAAkBU,aAAaC,MAIlC,qBAAGX,MAAkBU,aAAaE,MAKhCC,GAAqB/C,aAAOgD,KAAPhD,CAAH,wGAkETiD,GA1D+B,SAAC,GAQxC,IAPLC,EAOI,EAPJA,IACAjC,EAMI,EANJA,OACAkC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,MACA3C,EAEI,EAFJA,gBACA4C,EACI,EADJA,WAEQ3C,EAAMC,eAAND,EACF4C,EAAwB,MAARL,IAAgBA,EAatC,OACE,uBAAKM,MAAO,CAAEC,SAAU,YAAxB,UACE,gBAACxB,GAAD,CAAkBI,UAAWkB,EAA7B,UACE,gBAAC,KAAD,CAAM1C,eAAe,gBAAgB6C,GAAG,OAAxC,UACE,eAAC,KAAD,CAAMC,SAAS,OAAf,SAAuBL,IACvB,eAAC,KAAD,CAAMK,SAAS,OAAf,SAAuBhD,EAAE,qBAAsB,CAAEiD,QAhBlC,SAACA,GACtB,GAAIL,EACF,MAAO,IAET,IAAMM,EAAgBC,OAAOF,GAC7B,OAAIC,EAAgB,GAAKA,EAAgB,KAChCA,EAAcE,oBAAeC,EAAW,CAAEC,sBAAuB,KAEnEJ,EAAcE,iBAQ2CG,CAAehB,UAE3E,gBAAC,KAAD,CAAMxB,WAAW,WAAWb,eAAe,eAA3C,UACE,eAAC6B,GAAD,CACEyB,QAAQ,sBACRC,UAAU,UACVC,KAAK,MACLC,IAAI,IACJnB,SAAUA,EACVoB,YAAY,IACZlB,MAAOA,IAET,eAAC,KAAD,CAAQmB,MAAM,KAAKC,QAASrB,EAAasB,GAAG,MAA5C,SACG/D,EAAE,SAEL,eAAC,KAAD,CAAMgD,SAAS,OAAf,SAAuB1C,UAG1BsC,GACC,gBAACR,GAAD,CAAoBY,SAAS,OAAOgB,MAAM,UAA1C,UACGhE,EAAE,sBADL,IAC6B,IAC3B,eAAC,KAAD,CAAMgD,SAAS,OAAOiB,MAAM,EAAO5D,KAAMN,EAAiBmE,UAAQ,EAACF,MAAM,UAAzE,SACGhE,EAAE,eAAgB,CAAEM,oBCjClB6D,GA3DmC,SAAC,GAAoE,IAAlE5B,EAAiE,EAAjEA,IAAK6B,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,UAAiD,IAAtCC,iBAAsC,MAA1B,GAA0B,EAAtBvE,EAAsB,EAAtBA,gBAC9F,EAAsBwE,oBAAS,IAA/B,oBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQ3E,EAAMC,eAAND,EACF4E,EAAcC,oBAAQ,WAC1B,OAAOC,aAAsBvC,KAC5B,CAACA,IAEEwC,EAAY,IAAIC,KAAUR,GAC1BS,EAAoB,IAAID,KAAUJ,GAElCM,EAAeC,wBACnB,SAACC,GACKA,EAAEC,cAAcC,SAASC,OAC3Bd,EAAOW,EAAEC,cAAc3C,MAAM8C,QAAQ,KAAM,QAG/C,CAACf,IAGGgB,EAAkBN,wBAAY,WAClCV,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,gBAAC,KAAD,CAAOiB,MAAO1F,EAAE,mBAAoBqE,UAAWA,EAA/C,UACE,eAAC,GAAD,CACE3B,MAAO8B,EACP/B,YAAagD,EACbjD,SAAU0C,EACV3C,IAAKqC,EACLtE,OAAQgE,EACRvE,gBAAiBA,EACjB4C,WAAY3C,EAAE,WAEhB,gBAAC2F,GAAA,EAAD,WACE,eAAC,KAAD,CAAQtE,QAAQ,YAAYyC,QAASO,EAAWlE,MAAM,OAAOyF,SAAUlB,EAAvE,SACG1E,EAAE,YAEL,eAAC,KAAD,CACEG,MAAM,OACNyF,SAAUlB,IAAcK,EAAUc,YAAcd,EAAUe,GAAG,IAAMf,EAAUgB,GAAGd,GAChFnB,QAAO,wBAAE,uBAAAkC,EAAA,6DACPrB,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAHX,SAUerE,EAAZ0E,EAAc,uBAA4B,gBAG/C,eAAC,KAAD,CAAcrE,KAAMN,EAAiB8C,MAAO,CAAEoD,UAAW,UAAzD,SACGjG,EAAE,eAAgB,CAAEM,OAAQgE,UCCtB4B,GAvDqC,SAAC,GAAmD,IAAjD9B,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAW9B,EAA0B,EAA1BA,IAA0B,IAArB+B,iBAAqB,MAAT,GAAS,EACrG,EAAsBC,oBAAS,IAA/B,oBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQ3E,EAAMC,eAAND,EACF4E,EAAcC,oBAAQ,WAC1B,OAAOC,aAAsBvC,KAC5B,CAACA,IAEEwC,EAAY,IAAIC,KAAUR,GAC1BS,EAAoB,IAAID,KAAUJ,GAElCM,EAAeC,wBACnB,SAACC,GACKA,EAAEC,cAAcC,SAASC,OAC3Bd,EAAOW,EAAEC,cAAc3C,MAAM8C,QAAQ,KAAM,QAG/C,CAACf,IAGGgB,EAAkBN,wBAAY,WAClCV,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,gBAAC,KAAD,CAAOiB,MAAO1F,EAAE,qBAAsBqE,UAAWA,EAAjD,UACE,eAAC,GAAD,CACE5B,YAAagD,EACbjD,SAAU0C,EACVxC,MAAO8B,EACPjC,IAAKqC,EACLtE,OAAQgE,EACR3B,WAAY3C,EAAE,aAEhB,gBAAC2F,GAAA,EAAD,WACE,eAAC,KAAD,CAAQtE,QAAQ,YAAYyC,QAASO,EAAWlE,MAAM,OAAOyF,SAAUlB,EAAvE,SACG1E,EAAE,YAEL,eAAC,KAAD,CACE4F,SAAUlB,IAAcK,EAAUc,YAAcd,EAAUe,GAAG,IAAMf,EAAUgB,GAAGd,GAChFnB,QAAO,wBAAE,uBAAAkC,EAAA,6DACPrB,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAMTlE,MAAM,OARR,SAUeH,EAAZ0E,EAAc,uBAA4B,oBCxC/CyB,GAAoB9G,KAAOC,IAAV,+EA8ER8G,GAvEqC,SAAC,GAM9C,IALLC,EAKI,EALJA,cACAC,EAII,EAJJA,aACAhC,EAGI,EAHJA,UACAiC,EAEI,EAFJA,IACAxG,EACI,EADJA,gBAEQC,EAAMC,eAAND,EACAwG,EAAYC,aAASF,GAArBC,QACAE,EAAcC,aAAWJ,GAAzBG,UACFE,EAAWC,eACXC,EAAWC,eACTC,EAAYC,eAAZD,QAEFE,EAAW,yCAAG,WAAOC,GAAP,UAAAnB,EAAA,sEACZQ,EAAQW,GADI,OAElBL,EAASM,aAAuB,CAAEJ,UAASK,KAAM,CAACd,MAFhC,2CAAH,sDAKXe,EAAa,yCAAG,WAAOH,GAAP,UAAAnB,EAAA,sEACdU,EAAUS,GADI,OAEpBL,EAASM,aAAuB,CAAEJ,UAASK,KAAM,CAACd,MAF9B,2CAAH,sDAKbhD,EAAiB4B,wBAAY,WACjC,IAAMoC,EAAsBC,aAAiBnB,GAC7C,OAAIkB,EAAsB,GAAKA,EAAsB,KAC5CzC,aAAsBuB,GAAejD,iBAEvCmE,EAAoBnE,mBAC1B,CAACiD,IAEJ,EAA2BoB,cACzB,eAAC,GAAD,CAAclF,IAAK+D,EAAclC,UAAW8C,EAAa5C,UAAWA,EAAWvE,gBAAiBA,KAD3F2H,EAAP,qBAGA,EAA4BD,cAC1B,eAAC,GAAD,CAAelF,IAAK8D,EAAejC,UAAWkD,EAAehD,UAAWA,KADnEqD,EAAP,qBA4BA,OACE,gBAAC,KAAD,CAAMzH,eAAe,gBAAgBa,WAAW,SAAhD,UACE,eAAC,KAAD,CAASiD,MAAOqC,EAAcP,GAAG,GAAK,eAAiB,OAAvD,SAAgEvC,MAzB3D8C,EAAcP,GAAG,GACtB,eAAC,KAAD,CACEhC,QAAS4D,EACT9B,SAAU,CAAC,UAAW,YAAYgC,MAAK,SAACC,GAAD,OAAUjB,EAASkB,SAASC,SAASF,MAF9E,SAIG7H,EAAE,cAGL,gBAACmG,GAAD,WACE,eAAC,KAAD,CAAY9E,QAAQ,WAAWyC,QAAS6D,EAAmB5D,GAAG,MAA9D,SACE,eAAC,KAAD,CAAWC,MAAM,UAAU7D,MAAM,WAEnC,eAAC,KAAD,CACEkB,QAAQ,WACRyC,QAAS4D,EACT9B,SAAU,CAAC,UAAW,YAAYgC,MAAK,SAACC,GAAD,OAAUjB,EAASkB,SAASC,SAASF,MAH9E,SAKE,eAAC,KAAD,CAAS7D,MAAM,UAAU7D,MAAM,kB,oBCrC1B6H,GAjCuC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAU1B,EAAU,EAAVA,IACzDS,EAAYC,eAAZD,QACAhH,EAAMC,eAAND,EACR,EAAkCuE,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQuD,EAAaC,aAAW5B,GAAxB2B,SACFE,EAAaC,eACbvB,EAAWC,eACXuB,EAAqBtB,EAAUQ,aAAiBS,GAAY,EAC5D1E,EAAiB+E,EAAmBlF,iBACpCmF,EAAgBD,EAAqB,IAAItD,KAAUsD,GAAoBE,aAAaJ,GAAYK,WAAa,EAEnH,OACE,gBAAC,KAAD,CAAMzH,GAAG,MAAMd,eAAe,gBAAgBa,WAAW,SAAzD,UACE,gBAAC,KAAD,CAASiD,MAA8B,IAAvBsE,EAA2B,eAAiB,OAA5D,UACG/E,EACAgF,EAAgB,GAAK,eAACG,GAAA,EAAD,CAAgBhG,MAAO6F,OAE/C,eAAC,KAAD,CACE3C,SAAiC,IAAvB0C,GAA4B5D,EACtCZ,QAAO,wBAAE,uBAAAkC,EAAA,6DACPrB,GAAa,GADN,SAEDuD,IAFC,OAGPpB,EAASM,aAAuB,CAAEJ,UAASK,KAAM,CAACd,MAElD5B,GAAa,GALN,2CAFX,SAUG3E,EAAE,iBC3BL2I,GAAStJ,KAAOC,IAAV,mDAyFGsJ,GA3EqC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAM7B,EAA+B,EAA/BA,QAASjH,EAAsB,EAAtBA,gBAC5DC,EAAMC,eAAND,EACR,EAAkDuE,qBAAS,GAA3D,oBAAOuE,EAAP,KAA0BC,EAA1B,KACQxC,EAAqBsC,EAArBtC,IAAKyC,EAAgBH,EAAhBG,YACb,EAKIH,EAAKI,UAAY,GALrB,IACEC,UAAWC,OADb,MACiC,EADjC,MAEE7C,aAAc8C,OAFhB,MAEuC,EAFvC,MAGE/C,cAAegD,OAHjB,MAGyC,EAHzC,MAIEpB,SAAUqB,OAJZ,MAI+B,EAJ/B,EAMMJ,EAAY,IAAIlE,KAAUmE,GAC1B7C,EAAe,IAAItB,KAAUoE,GAC7B/C,EAAgB,IAAIrB,KAAUqE,GAC9BpB,EAAW,IAAIjD,KAAUsE,GACzBC,EAAYC,aAAWR,GACvBS,EAASZ,EAAKa,SAASC,cACvBC,EAAa5C,GAAWkC,GAAaA,EAAUW,cAAc,GAC7DC,EAAOC,eACPjD,EAAWC,eAEXiD,EAAaC,aAAiBV,EAAWO,GAEvCI,EAAcC,aAAWH,GAAzBE,UAEFE,EAAgBjF,uBAAW,wBAAC,uBAAAa,EAAA,sEAE9B+C,GAAqB,GAFS,SAGxBmB,IAHwB,OAI9BpD,EAASM,aAAuB,CAAEJ,UAASK,KAAM,CAACd,MAClDwC,GAAqB,GALS,gDAO9BsB,QAAQC,MAAR,MAP8B,yDAS/B,CAACJ,EAAWpD,EAAUE,EAAST,IAkBlC,OACE,gBAACoC,GAAD,WACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAM1E,MAAI,EAACsG,cAAc,YAAYvG,MAAM,YAAYhB,SAAS,OAAOwH,GAAG,MAA1E,mBAGA,eAAC,KAAD,CAAMvG,MAAI,EAACsG,cAAc,YAAYvG,MAAM,aAAahB,SAAS,OAAjE,SACGhD,EAAE,eAGP,eAAC,GAAD,CAAeiI,SAAUA,EAAU1B,IAAKA,IACxC,gBAAC,KAAD,WACE,eAAC,KAAD,CAAMtC,MAAI,EAACsG,cAAc,YAAYvG,MAAM,YAAYhB,SAAS,OAAOwH,GAAG,MAA1E,SACGf,IAEH,eAAC,KAAD,CAAMxF,MAAI,EAACsG,cAAc,YAAYvG,MAAM,aAAahB,SAAS,OAAjE,SACGhD,EAAE,eAGLgH,EAlCG4C,EACL,eAAC,GAAD,CACEvD,cAAeA,EACfC,aAAcA,EACdhC,UAAWmF,EACXlD,IAAKA,EACLxG,gBAAiBA,IAGnB,eAAC,KAAD,CAAQ0K,GAAG,MAAMtK,MAAM,OAAOyF,SAAUkD,EAAmBhF,QAASsG,EAApE,SACGpK,EAAE,sBAwBO,eAAC0K,GAAA,EAAD,CAAcD,GAAG,MAAMtK,MAAM,a,UCjEhCwK,GAvB6B,SAAC,GAAmD,IAAjD7K,EAAgD,EAAhDA,QAASsI,EAAuC,EAAvCA,WAAYwC,EAA2B,EAA3BA,IAAK7K,EAAsB,EAAtBA,gBAC/DC,EAAMC,eAAND,EACR,EAA4ByH,cAC1B,eAACoD,GAAA,EAAD,CACEC,UAAW9K,EAAE,eAAgB,CAAEM,OAAQR,IACvCiL,WAAY3C,EAAWK,WACvBmC,IAAKA,EACLI,SAAUjL,KALPkL,EAAP,qBAcA,OACE,eAAC,KAAD,CAAYnH,QANY,SAACoH,GACzBA,EAAMC,kBACNF,KAIwC5J,QAAQ,OAAOwC,MAAM,KAAKuH,GAAG,MAArE,SACE,eAAC,KAAD,CAAejL,MAAM,YCVrBkL,GAAiBC,aAAH,iLAYdC,GAAmBlM,KAAOC,IAAV,mPACN,gBAAGiC,EAAH,EAAGA,MAAH,wCAA0CA,EAAMC,OAAOgK,cAAvD,aAAyEjK,EAAMC,OAAOiK,UAAtF,OAEDJ,IAUTK,GAAQrM,KAAOC,IAAV,mSAEK,SAACqM,GAAD,OAAWA,EAAMpK,MAAMqK,KAAKC,cACzB,gBAAGtK,EAAH,EAAGA,MAAH,SAAUuK,eAAuC,OAASvK,EAAMwK,MAAMH,QAUnFI,GAAU3M,KAAOC,IAAV,6GACS,qBAAGiC,MAAkBC,OAAOyK,cAM5CC,GAAmB7M,KAAOC,IAAV,kEACV,SAACqM,GAAD,OAAYA,EAAMQ,SAAW,OAAS,SAwFnCC,GA5E2B,SAAC,GAA4C,IAA1CvD,EAAyC,EAAzCA,KAAMlJ,EAAmC,EAAnCA,QAASyI,EAA0B,EAA1BA,WAAYpB,EAAc,EAAdA,QAC9DhH,EAAMC,eAAND,EAER,EAA0DuE,qBAAS,GAAnE,oBAAO8H,EAAP,KAA8BC,EAA9B,KAIMzL,EAAYgI,EAAKa,SAAStI,MAAM,KAAK,GAAGmL,oBAExC1M,EACJgJ,EAAK2D,WAAa3D,EAAK2D,UAAUzG,GAAG,GAApC,WACQ8C,EAAK2D,UAAU/D,WAAWrF,oBAAeC,EAAW,CAAEC,sBAAuB,KACjF,GAEAxD,EAAU+I,EAAKa,UAAYb,EAAKa,SAASC,cAAcnE,QAAQ,WAAY,IAC3EiH,EAAY5D,EAAK6D,KAAO7D,EAAK6D,KAAKD,UAAY,QAE9CE,EAAU9D,EAAK+B,KAAO/B,EAAK+B,IAAIxH,eAAe,QAAS,CAAEE,sBAAuB,IAEhFsJ,EAAwBjO,GAAyB,CACrDC,kBAAmBiK,EAAKgE,WAAWC,QACnCjO,aAAcgK,EAAKkE,MAAMD,UAErB/M,EAAe,UAAMiN,KAAN,YAAgCJ,GAC/CrD,EAAYV,EAAKG,YAAY/J,KAC7B6M,EAAuC,UAAtBjD,EAAKkE,MAAMzM,OAElC,OACE,gBAACoL,GAAD,CAAOI,eAAgBA,EAAvB,UACGA,GAAkB,eAACP,GAAD,IACnB,eAAC,GAAD,CACEzL,QAASA,EACTa,WAAYkI,EAAKlI,WACjBC,gBAAiBiI,EAAKoE,YACtBpM,UAAWA,EACXC,YAAa+H,EAAKkE,MAAMzM,UAExBX,GACA,gBAAC,KAAD,CAAMO,eAAe,gBAAgBa,WAAW,SAAhD,UACE,gBAAC,KAAD,WAAOf,EAAE,OAAT,OACA,eAAC,KAAD,CAAMiE,MAAI,EAACpB,MAAO,CAAEqK,QAAS,OAAQnM,WAAY,UAAjD,SACG8H,EAAK+B,IACJ,uCACE,eAAC,GAAD,CAAW9K,QAASA,EAASC,gBAAiBA,EAAiBqI,WAAYA,EAAYwC,IAAK/B,EAAK+B,MAChG+B,EAFH,OAKA,eAAC,KAAD,CAAUvM,OAAQ,GAAID,MAAO,UAKrC,gBAAC,KAAD,CAAMD,eAAe,gBAArB,UACE,gBAAC,KAAD,WAAOF,EAAE,QAAT,OACA,eAAC,KAAD,CAAMiE,MAAI,EAAV,SAAYwI,OAEd,eAACU,GAAD,CAAsBtE,KAAMA,EAAM7B,QAASA,EAASjH,gBAAiBA,IACrE,eAACiM,GAAD,IACA,eAACoB,GAAA,EAAD,CACEtJ,QAAS,kBAAMwI,GAA0BD,IACzCF,SAAUE,IAEZ,eAACH,GAAD,CAAkBC,SAAUE,EAA5B,SACE,eAAC,GAAD,CACE1M,QAASA,EACTD,iBAAkB2N,aAAuBxE,EAAKG,YAAY/J,MAC1DW,YAAW,sCAAiC2J,GAC5C1J,oBAAqBA,EACrBC,QAASA,EACTC,gBAAiBA,U,UChIrBuN,GAAYjO,KAAOC,IAAV,6MAGJ,qBAAGiC,MAAkBC,OAAOM,QAQvB,qBAAGP,MAAkBC,OAAO+L,cAMtCC,GAAanO,KAAOC,IAAV,wEAuCDmO,GAlCiB,SAAC,GAQ1B,IAPL/K,EAOI,EAPJA,MACA5C,EAMI,EANJA,QACAjB,EAKI,EALJA,aACAD,EAII,EAJJA,kBACAwJ,EAGI,EAHJA,WACAsF,EAEI,EAFJA,cAEI,IADJC,kBACI,SACEf,EAAwBjO,GAAyB,CAAEC,oBAAmBC,iBACtEkB,EAAe,UAAMiN,KAAN,YAAgCJ,GAErD,OAAyB,IAAlBc,EACL,eAACJ,GAAD,UACGI,EACC,uCACE,gBAACF,GAAD,WAAa9K,EAAb,QACEiL,GACA,eAAC,GAAD,CAAW7N,QAASA,EAASsI,WAAYA,EAAYwC,IAAK8C,EAAe3N,gBAAiBA,OAI9F,eAACyN,GAAD,UACE,eAAC,KAAD,CAAUrN,MAAO,SAKvB,eAACmN,GAAD,UACE,gBAACE,GAAD,WAAaE,EAAb,UC1DAE,GAAYvO,aAAOwO,KAAPxO,CAAH,mHAIX,qBAAGkC,MAAkBU,aAAaE,MAMhCmL,GAAYjO,KAAOC,IAAV,uIAKX,qBAAGiC,MAAkBU,aAAaE,MAiCvB2L,GA5BkC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOzH,EAAU,EAAVA,IACxDF,EAAkB4H,aAAY1H,GAA9BF,cACArG,EAAMC,eAAND,EACFkO,EAAmB1G,aAAiBnB,GAc1C,OACE,gBAAC,GAAD,WACE,eAACuH,GAAD,CAAW3M,IAAG,wBAAmB8M,EAAnB,QAAgC7M,IAAI,OAAOf,MAAO,GAAIC,OAAQ,GAAI2D,GAAG,QACnF,iCAdEmK,EAEA,eAAC,KAAD,CAAMlK,MAAM,YAAYhB,SAAS,OAAOiB,MAAI,EAACsG,cAAc,YAA3D,SACGvK,EAAE,aAKF,KAQH,eAAC,KAAD,CAAMiE,MAAI,EAAV,SAAY+J,WC1CdG,GAAS9O,KAAO+O,KAAV,sFACD,gBAAGC,EAAH,EAAGA,OAAQ9M,EAAX,EAAWA,MAAX,OAAwB8M,EAAS9M,EAAMC,OAAOM,KAAOP,EAAMC,OAAO8M,gBAgB9DC,GAXiD,SAAC,GAAiC,IAA/BtG,EAA8B,EAA9BA,SACjE,OAD+F,EAApBuG,cAElE,eAACL,GAAD,CAAQE,OAAQpG,EAAhB,SAA2BA,EAAS7E,mBAG3C,eAAC+K,GAAD,CAAQE,OAAQ,EAAhB,SACE,eAAC,KAAD,CAAUlO,MAAO,QChBjBmN,GAAYjO,KAAOC,IAAV,4KAKJ,qBAAGiC,MAAkBC,OAAOiN,WAEnC,qBAAGlN,MAAkBU,aAAaE,MAKhCuM,GAAYrP,aAAOsP,KAAPtP,CAAH,iEACA,qBAAGuP,QAAyB,iBAAmB,eAiB/CC,GAbyB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACjC9O,EAAMC,eAAND,EAEF+O,GADWC,gBAATC,KAGR,OACE,gBAAC,GAAD,YACIF,GAAY/O,EAAE,WAChB,eAAC0O,GAAD,CAAW1K,MAAM,UAAU4K,QAASE,QC7BpCI,GAAmB7P,KAAOC,IAAV,uDAQhB6P,GAAoB9P,KAAOC,IAAV,wKACZ,qBAAGiC,MAAkBC,OAAOM,QAKnC,qBAAGP,MAAkBU,aAAamN,MAMhC9B,GAAYjO,KAAOC,IAAV,uEAgCA+P,GA3B8C,SAAC,GAAoB,IAAlB1O,EAAiB,EAAjBA,WACxD2O,EAAoB3O,EAAaA,EAAW4O,cAAgB,eAAC,KAAD,CAAUpP,MAAO,KAC3EH,EAAMC,eAAND,EACFwP,EACJ,iCACGxP,EAAE,yEACH,wBACA,wBACCA,EAAE,+GAGP,EAA+CyP,cAAWD,EAAgB,CACxEE,UAAW,UACXC,cAAe,CAAC,GAAI,MAFdC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,gBAAC,GAAD,WACE,eAACX,GAAD,UAAoBG,IACpB,eAACJ,GAAD,CAAkBa,IAAKH,EAAvB,SACE,eAAC,KAAD,CAAU5L,MAAM,iBAEjB8L,GAAkBD,MC9CnBX,GAAmB7P,KAAOC,IAAV,uDAQhB0Q,GAAmB3Q,KAAOC,IAAV,kLAMlB,qBAAGiC,MAAkBU,aAAamN,MAMhC9B,GAAYjO,KAAOC,IAAV,uEA+BA2Q,GA1B4C,SAAC,GAAmB,IAAjBzD,EAAgB,EAAhBA,UACtD0D,EACJ1D,GAAaA,EAAUzG,GAAG,GAA1B,WACM5C,OAAOqJ,GAAWpJ,oBAAeC,EAAW,CAAEC,sBAAuB,KAEzE,eAAC,KAAD,CAAUnD,MAAO,KAEbH,EAAMC,eAAND,EACR,EAA+CyP,cAC7CzP,EAAE,+DACF,CAAE0P,UAAW,UAAWC,cAAe,CAAC,GAAI,MAFtCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,gBAAC,GAAD,WACE,eAACE,GAAD,UACE,eAAC,KAAD,UAAOE,MAET,eAAC,GAAD,CAAkBH,IAAKH,EAAvB,SACE,eAAC,KAAD,CAAU5L,MAAM,iBAEjB8L,GAAkBD,M,UClDZM,GAAkB9Q,KAAOC,IAAV,yXAEN,qBAAGiC,MAAkBC,OAAOC,SAM9C,qBAAGF,MAAkBU,aAAaE,MAOlC,qBAAGZ,MAAkBU,aAAamO,MAQzBC,GAAehR,KAAOC,IAAV,6FAMZgR,GAAQjR,KAAO+O,KAAV,4CACP,qBAAG7M,MAAkBC,OAAOiK,aAI1B8E,GAASlR,KAAO+O,KAAV,4CACR,qBAAG7M,MAAkBC,OAAO+L,cAG1BiD,GAAgBnR,KAAOC,IAAV,0GAKbiP,GAASlP,KAAOC,IAAV,qFAGR,qBAAGiC,MAAkBC,OAAOM,QAG1B2O,GAASpR,KAAOC,IAAV,gEAER,qBAAGiC,MAAkBC,OAAO+L,cC2BxBvF,GA7DoD,SAAC,GAAsC,IAApCzB,EAAmC,EAAnCA,IAAK0C,EAA8B,EAA9BA,SAAUuF,EAAoB,EAApBA,cAC7EkC,EAAoB,IAAI1L,KAAUiE,EAAShB,UAC3CG,EAAaC,eACfJ,EAAW,EACXM,EAAgB,EAChBhF,EAAiBiL,EAAgBvG,EAAS7E,iBAAmB,eAAC,KAAD,CAAUjD,MAAO,KAG7EuQ,EAAkBC,WACrB1I,EAAWT,aAAiBkJ,GAC5BnI,EAAgB,IAAIvD,KAAUiD,GAAUO,aAAaJ,GAAYK,WACjElF,EAAiB0E,EAAS7E,kBAG5B,MAAkCmB,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQuD,EAAaC,aAAW5B,GAAxB2B,SACAlI,EAAMC,eAAND,EACF8G,EAAWC,eACTC,EAAYC,eAAZD,QACR,EAA4B4J,sBAAW,CACrCC,MAAO,EACPC,IAAKvI,EACLwI,SAAU,EACVC,UAAW,IACXC,SAAU,IALJC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAOXC,EAAcC,kBAAOF,GAM3B,OAJAG,sBAAU,WACRF,EAAYG,QAAQhJ,KACnB,CAACA,EAAe6I,IAGjB,gBAACjB,GAAD,WACE,gBAACE,GAAD,WACE,eAACC,GAAD,qBACA,eAACC,GAAD,UAASvQ,EAAE,UAAU2J,mBAEvB,gBAAC6G,GAAD,WACE,iCACE,eAAC,GAAD,UAASjN,IACR2N,EAAU,GAAK,gBAAC,GAAD,eAAUA,EAAV,YAElB,eAAC,KAAD,CACEtL,UAAWqC,GAAYvD,IAAc8J,EACrC1K,QAAO,wBAAE,uBAAAkC,EAAA,6DACPrB,GAAa,GADN,SAEDuD,IAFC,OAGPpB,EAASM,aAAuB,CAAEJ,UAASK,KAAM,CAACd,MAElD5B,GAAa,GALN,2CAOTyG,GAAG,MATL,SAWGpL,EAAE,oBCjDPmG,GAAoB9G,KAAOC,IAAV,+CAmKRmR,GA3J6C,SAAC,GAOtD,IANLlK,EAMI,EANJA,IACAmD,EAKI,EALJA,SACAV,EAII,EAJJA,YACA6D,EAGI,EAHJA,WACAE,EAEI,EAFJA,MACAyB,EACI,EADJA,cAEQxO,EAAMC,eAAND,EACAgH,EAAYC,eAAZD,QACR,EAAkDzC,qBAAS,GAA3D,oBAAOuE,EAAP,KAA0BC,EAA1B,KACA,EAAmDkF,aAAY1H,GAAvD2C,EAAR,EAAQA,UAAW5C,EAAnB,EAAmBA,aAAcD,EAAjC,EAAiCA,cACzBG,EAAYC,aAASF,GAArBC,QACAE,EAAcC,aAAWJ,GAAzBG,UACFoD,EAAOC,eACPnD,EAAWC,eAEX+C,EAAa5C,GAAWkC,GAAaA,EAAUW,cAAc,GAE7DN,EAAYP,EAAY/J,KACxB2N,EAAwBjO,GAAyB,CACrDC,kBAAmBiO,EAAWC,QAC9BjO,aAAckO,EAAMD,UAEhB/M,EAAe,UAAMiN,KAAN,YAAgCJ,GAE/C1F,EAAW,yCAAG,WAAOC,GAAP,UAAAnB,EAAA,sEACZQ,EAAQW,GADI,OAElBL,EAASM,aAAuB,CAAEJ,UAASK,KAAM,CAACd,MAFhC,2CAAH,sDAKXe,EAAa,yCAAG,WAAOH,GAAP,UAAAnB,EAAA,sEACdU,EAAUS,GADI,OAEpBL,EAASM,aAAuB,CAAEJ,UAASK,KAAM,CAACd,MAF9B,2CAAH,sDAKbhD,EAAiB4B,wBAAY,WACjC,IAAMoC,EAAsBC,aAAiBnB,GAC7C,OAAIkB,EAAsB,GAAKA,EAAsB,KAC5CzC,aAAsBuB,GAAejD,iBAEvCmE,EAAoBnE,mBAC1B,CAACiD,IAEJ,EAA2BoB,cACzB,eAAC,GAAD,CAAclF,IAAK+D,EAAclC,UAAW8C,EAAa5C,UAAWoF,EAAU3J,gBAAiBA,KAD1F2H,EAAP,qBAGA,EAA4BD,cAC1B,eAAC,GAAD,CAAelF,IAAK8D,EAAejC,UAAWkD,EAAehD,UAAWoF,KADnE/B,EAAP,qBAGMqC,EAAaC,aAAiBV,EAAWO,GACzChD,EAAWC,eACTmD,EAAcC,aAAWH,GAAzBE,UAEFE,EAAgBjF,uBAAW,wBAAC,uBAAAa,EAAA,sEAE9B+C,GAAqB,GAFS,SAGxBmB,IAHwB,OAI9BpD,EAASM,aAAuB,CAAEJ,UAASK,KAAM,CAACd,MAElDwC,GAAqB,GANS,gDAQ9BsB,QAAQC,MAAR,MAR8B,yDAU/B,CAACJ,EAAWpD,EAAUE,EAAST,IAElC,OAAKS,EAaD4C,EACEvD,EAAcN,GAAG,GAEjB,gBAACoK,GAAD,WACE,gBAACE,GAAD,WACE,gBAACC,GAAD,WAAQ5G,EAAR,OACA,eAAC6G,GAAD,UAASvQ,EAAE,UAAU2J,mBAEvB,gBAAC6G,GAAD,WACE,+BACE,eAAC,GAAD,UAASjN,QAEX,gBAAC,GAAD,WACE,eAAC,KAAD,CAAYlC,QAAQ,YAAYyC,QAAS6D,EAAmB5D,GAAG,MAA/D,SACE,eAAC,KAAD,CAAWC,MAAM,UAAU7D,MAAM,WAEnC,eAAC,KAAD,CACEkB,QAAQ,YACRyC,QAAS4D,EACT9B,SAAU,CAAC,UAAW,YAAYgC,MAAK,SAACC,GAAD,OAAUjB,EAASkB,SAASC,SAASF,MAH9E,SAKE,eAAC,KAAD,CAAS7D,MAAM,UAAU7D,MAAM,oBASzC,gBAACgQ,GAAD,WACE,gBAACE,GAAD,WACE,gBAACE,GAAD,WAASvQ,EAAE,SAAS2J,cAApB,OACA,eAAC2G,GAAD,UAAQ5G,OAEV,eAAC8G,GAAD,UACE,eAAC,KAAD,CACErQ,MAAM,OACN2D,QAAS4D,EACTrG,QAAQ,YACRuE,SAAU,CAAC,UAAW,YAAYgC,MAAK,SAACC,GAAD,OAAUjB,EAASkB,SAASC,SAASF,MAJ9E,SAMG7H,EAAE,mBAORwO,EAcH,gBAAC2B,GAAD,WACE,eAACE,GAAD,UACE,eAACE,GAAD,UAASvQ,EAAE,eAAe2J,kBAE5B,eAAC6G,GAAD,UACE,eAAC,KAAD,CAAQrQ,MAAM,OAAOyF,SAAUkD,EAAmBhF,QAASsG,EAAe/I,QAAQ,YAAlF,SACGrB,EAAE,iBAlBP,gBAACmQ,GAAD,WACE,eAACE,GAAD,UACE,eAACE,GAAD,UAASvQ,EAAE,iBAAiB2J,kBAE9B,eAAC6G,GAAD,UACE,eAAC,KAAD,CAAUrQ,MAAO,IAAKqR,aAAc,GAAIC,UAAW,UAnEvD,gBAACtB,GAAD,WACE,eAACE,GAAD,UACE,eAACE,GAAD,UAASvQ,EAAE,iBAAiB2J,kBAE9B,eAAC6G,GAAD,UACE,eAAC9F,GAAA,EAAD,CAAcvK,MAAM,eCjFxBuR,GAAkBpG,aAAH,uGASfqG,GAAoBrG,aAAH,uGASjBgC,GAAYjO,KAAOC,IAAV,mPACA,qBAAG6M,SAEVyF,aADI,yEAEAF,IAEJE,aAJI,yEAKAD,OAGI,qBAAGpQ,MAAkBC,OAAOqK,cAMxC,qBAAGtK,MAAkBU,aAAamN,MAMhC7P,GAAqBF,aAAOG,KAAPH,CAAH,kDAIlBwS,GAAiBxS,KAAOC,IAAV,2KACT,qBAAGiC,MAAkBC,OAAOM,QAKnC,qBAAGP,MAAkBU,aAAaE,MAKhC2P,GAAgBzS,KAAOC,IAAV,mRAKf,qBAAGiC,MAAkBU,aAAaE,MAgBhCgO,GAAkB9Q,KAAOC,IAAV,qLAIjB,qBAAGiC,MAAkBU,aAAaE,MAQhC4P,GAAgB1S,KAAOC,IAAV,kDAIb0S,GAAiB3S,KAAOC,IAAV,oFAGhB,qBAAGiC,MAAkBU,aAAamN,MAKhC6C,GAAe5S,KAAOC,IAAV,8HAmEH4S,GA5DgD,SAAC,GAOzD,IANLC,EAMI,EANJA,QACAvH,EAKI,EALJA,IACAjK,EAII,EAJJA,WACA6L,EAGI,EAHJA,UACAgC,EAEI,EAFJA,cACArC,EACI,EADJA,SAEMtD,EAAOsJ,EAELnS,EAAMC,eAAND,EACFoS,EAA+B,OAApBvJ,EAAKlI,WACdkM,EAA4BhE,EAA5BgE,WAAYE,EAAgBlE,EAAhBkE,MAAOL,EAAS7D,EAAT6D,KACrB5M,EAAU+I,EAAKa,UAAYb,EAAKa,SAASC,cAAcnE,QAAQ,QAAS,IACxEoH,EAAwBjO,GAAyB,CACrDC,kBAAmBiO,EAAWC,QAC9BjO,aAAckO,EAAMD,UAEhBvD,EAAYV,EAAKG,YAAY/J,KAC7BoT,EAAQhF,aAAuB9D,GAC3B,sCAAkCA,GAE5C,OACE,gBAAC,GAAD,CAAW4C,SAAUA,EAArB,UACE,gBAAC4F,GAAD,WACGK,GACC,eAACP,GAAD,UACE,eAAC,GAAD,CAAoBxR,KAAI,yDAAoDuM,GAA5E,SACG5M,EAAE,eAAgB,CAAEM,OAAQR,QAInC,eAAC,GAAD,CAAoBO,KAAMgS,EAA1B,SAAkCrS,EAAE,mBACpC,gBAAC8R,GAAD,WACGjJ,EAAKoE,YAAc,eAAC,KAAD,IAAmB,eAAC,KAAD,IACtCP,EAAO,eAAC,KAAD,IAAc,WAG1B,gBAACsF,GAAD,WACE,gBAACC,GAAD,WACE,eAAC,KAAD,UAAOjS,EAAE,SACT,eAAC,GAAD,gBAAS4K,OAEX,gBAACqH,GAAD,WACE,eAAC,KAAD,UAAOjS,EAAE,gBACT,eAAC,GAAD,gBAAgBW,OAElB,gBAACsR,GAAD,WACE,eAAC,KAAD,UAAOjS,EAAE,eACT,eAAC,GAAD,gBAAewM,UAGnB,gBAAC,GAAD,WACE,eAAC,GAAD,6BAAmB3D,GAAnB,IAAyB2F,cAAeA,KACxC,eAAC8D,GAAD,6BAAkBzJ,GAAlB,IAAwB2F,cAAeA,YCtLzC+D,GAAQlT,KAAOC,IAAV,qFAEA,qBAAGiC,MAAkBC,OAAO+L,cAIjCiF,GAAmBnT,KAAOC,IAAV,4FAmBPmT,GAT+B,SAAC,GAA8B,IAAD,IAA3BzE,aAA2B,MAAnB,GAAmB,EAAf0E,EAAe,EAAfA,SAC3D,OACE,iCACG1E,GAAS,eAACuE,GAAD,UAAQvE,IAClB,eAACwE,GAAD,UAAmBE,QtBMZC,GAAwC,CACnD,CACEC,GAAI,EACJC,KAAM,OACNC,UAAU,EACV9E,MAAO,IAET,CACE4E,GAAI,EACJC,KAAM,SACNC,UAAU,EACV9E,MAAO,UAET,CACE4E,GAAI,EACJC,KAAM,MACNC,UAAU,EACV9E,MAAO,OAET,CACE4E,GAAI,EACJC,KAAM,UACNC,UAAU,EACV9E,MAAO,KAIE+E,GAAyC,CACpD,CACEH,GAAI,EACJC,KAAM,OACNC,UAAU,EACV9E,MAAO,IAET,CACE4E,GAAI,EACJC,KAAM,SACNC,UAAU,EACV9E,MAAO,UAET,CACE4E,GAAI,EACJC,KAAM,MACNC,UAAU,EACV9E,MAAO,OAET,CACE4E,GAAI,EACJC,KAAM,YACNC,UAAU,EACV9E,MAAO,aAET,CACE4E,GAAI,EACJC,KAAM,aACNC,UAAU,EACV9E,MAAO,cAET,CACE4E,GAAI,EACJC,KAAM,UACNC,UAAU,EACV9E,MAAO,M,SAICtP,K,cAAAA,E,aAAAA,M,KuBhEZ,I,uCAAMsU,GAAQ,CACZpI,IAAK6C,GACL5E,KAAMiF,GACNO,OAAQE,GACR4D,QAAStD,GACTlO,WAAY0O,GACZ7C,UAAWyD,IAGPgD,GAAY5T,KAAOC,IAAV,8KAOX,qBAAGiC,MAAkBU,aAAamO,MAKhC8C,GAAW7T,KAAO8T,GAAV,oFAEe,qBAAG5R,MAAkBC,OAAOyK,cAGnDmH,GAAmB/T,KAAOgU,GAAV,6DAIhBC,GAAgBjU,KAAOgU,GAAV,8EAKbE,GAAiBlU,KAAOgU,GAAV,qDAwHLG,GApH2C,SAAC7H,GACzD,IAAQwG,EAA2BxG,EAA3BwG,QAAS3D,EAAkB7C,EAAlB6C,cACXiF,IAAoBxF,aAAYkE,EAAQ5L,KAAKF,cAAcoC,WACjE,EAAsDlE,oBAASkP,GAA/D,oBAAOC,EAAP,KAA4BC,EAA5B,KACMC,EAAoBC,aAAkBH,EAAqB,KACzD1T,EAAMC,eAAND,EAEF8T,EAAoB,WACxBH,GAAwBD,IAG1BpC,sBAAU,WACRqC,EAAuBF,KACtB,CAACA,IAEJ,MAAuBzE,gBAAfC,EAAR,EAAQA,KAAM8E,EAAd,EAAcA,KAERhF,GAAYE,EACZ+E,EAAcjF,EAAW4D,GAAqBI,GAC9CkB,EAAcD,EAAYE,KAAI,SAACC,GAAD,OAAYA,EAAOtB,QAmFvD,OACE,uCAjFKkB,EA+CH,gBAACb,GAAD,CAAUpP,QAASgQ,EAAnB,UACE,gCACE,8BACE,eAACP,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,gBAAU5H,EAAM9C,aAItB,gCACE,eAACuK,GAAD,UACE,eAAC,GAAD,CAAYpF,MAAOhO,EAAE,UAArB,SACE,eAAC,GAAD,6BAAY2L,EAAM0C,QAAlB,IAA0BG,cAAeA,SAG7C,eAAC8E,GAAD,UACE,eAAC,GAAD,CAAYtF,MAAOhO,EAAE,OAArB,SACE,eAAC,GAAD,6BAAS2L,EAAMf,KAAf,IAAoB+C,YAAU,eAKtC,8BACE,eAACsF,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,CAASnE,mBAAoB4E,aAtEnC,eAACR,GAAD,CAAUpP,QAASgQ,EAAnB,SACGM,OAAOC,KAAK1I,GAAOuI,KAAI,SAACI,GACvB,IAAMC,EAAcN,EAAYO,QAAQF,GACxC,IAAqB,IAAjBC,EACF,OAAO,KAGT,OAAQD,GACN,IAAK,UACH,OACE,8BACE,eAACrB,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,CAASnE,mBAAoB4E,SAH1BY,GAQb,IAAK,MACH,OACE,8BACE,eAACrB,GAAD,UACE,eAAC,GAAD,CAAYjF,MAAOhO,EAAE,OAArB,SACE,eAAC,GAAD,6BAAS2L,EAAMf,KAAf,IAAoB+C,WAAYoB,UAH7BuF,GAQb,QACE,OACE,8BACE,eAACrB,GAAD,UACE,eAAC,GAAD,CAAYjF,MAAOhO,EAAEgU,EAAYO,GAAavG,OAA9C,SACGyG,KAAMC,cAAc1B,GAAMsB,GAA1B,6BAAqC3I,EAAM2I,IAA3C,IAAiD9F,wBAH/C8F,SAmDpBV,GACC,8BACE,qBAAIe,QAAS,EAAb,SACE,eAAC,GAAD,6BAAiBhJ,GAAjB,IAAwBQ,SAAUuH,aCpKxCpG,GAAYjO,KAAOC,IAAV,gIACH,qBAAGiC,MAAkBqK,KAAKgJ,cAEtB,qBAAGrT,MAAkBqK,KAAKC,cAKpCgJ,GAAexV,KAAOC,IAAV,0GAQZwV,GAAczV,KAAO0V,MAAV,qKASXC,GAAY3V,KAAO4V,MAAV,sHASTC,GAAiB7V,KAAOC,IAAV,sDAId6V,GAAwB9V,KAAOC,IAAV,0HA2CZ8V,GApC0B,SAACzJ,GACxC,IAAM0J,EAAiBhE,kBAAuB,MACtCrR,EAAMC,eAAND,EACAsV,EAAiC3J,EAAjC2J,KAAMC,EAA2B5J,EAA3B4J,QAAS/G,EAAkB7C,EAAlB6C,cAEfgH,EAASC,cAASF,EAASD,EAAM,CAAExC,UAAU,EAAM4C,WAAY,SAA/DF,KAQR,OACE,eAAC,GAAD,UACE,gBAACN,GAAD,WACE,eAACL,GAAD,CAAc9E,IAAKsF,EAAnB,SACE,eAACP,GAAD,UACE,eAACE,GAAD,UACGQ,EAAKtB,KAAI,SAACyB,GACT,OAAO,yBAAC,GAAD,6BAASA,EAAIC,UAAb,IAAuBpH,cAAeA,EAAe8F,IAAG,oBAAeqB,EAAI/C,gBAK1F,eAACuC,GAAD,UACE,gBAAC,KAAD,CAAQ9T,QAAQ,OAAOyC,QAnBX,WAClBuR,EAAe9D,QAAQsE,eAAe,CACpCC,SAAU,YAiBN,UACG9V,EAAE,UACH,eAAC,KAAD,CAAegE,MAAM,uB,UCxClB+R,GArCuC,SAAC,GAAiC,IAKlFC,EALmDC,EAA8B,EAA9BA,wBAC/CC,EAAQC,eAARD,IACFtP,EAAWC,eACT7G,EAAMC,eAAND,EAGR,OAAQ4G,EAASkB,UACf,IAAK,SACHkO,EAAc,EACd,MACF,IAAK,iBACHA,EAAc,EACd,MACF,IAAK,kBACHA,EAAc,EACd,MACF,QACEA,EAAc,EAIlB,OACE,eAAC,GAAD,UACE,gBAAC,KAAD,CAAYA,YAAaA,EAAanS,MAAM,KAAKxC,QAAQ,SAAzD,UACE,eAAC,KAAD,CAAgB+U,GAAIC,KAAMC,GAAE,UAAKJ,GAAjC,SACGlW,EAAE,UAEL,eAAC,KAAD,CAAiBuW,KAAMN,EAAvB,SACE,eAAC,KAAD,CAAgBG,GAAIC,KAAMC,GAAE,UAAKJ,EAAL,YAA5B,SACGlW,EAAE,sBAUTZ,GAAUC,KAAOC,IAAV,8MAUT,qBAAGiC,MAAkBU,aAAaE,MCjDhCmL,GAAYjO,KAAOC,IAAV,0FAGX,qBAAGiC,MAAkBU,aAAaE,MAwBvBqU,GAnB8C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClEC,EAAe,SAACC,GAChBH,IAAaG,GACfF,EAASE,IAIb,OACE,gBAAC,GAAD,WACE,eAAC,KAAD,CAAYvV,QAAQ,OAAOwC,MAAM,KAAK+O,GAAG,oBAAoB9O,QAAS,kBAAM6S,EAAajY,EAASmY,OAAlG,SACE,eAAC,KAAD,CAAc7S,MAAOyS,IAAa/X,EAASmY,KAAO,UAAY,mBAEhE,eAAC,KAAD,CAAYxV,QAAQ,OAAOwC,MAAM,KAAK+O,GAAG,qBAAqB9O,QAAS,kBAAM6S,EAAajY,EAASoY,QAAnG,SACE,eAAC,KAAD,CAAc9S,MAAOyS,IAAa/X,EAASoY,MAAQ,UAAY,uBCJjEC,GAAmB1X,KAAOC,IAAV,wTAUlB,qBAAGiC,MAAkBU,aAAaE,MAQhC6U,GAAgB3X,KAAOC,IAAV,qIAKf+C,MAKE4U,GAAe5X,KAAOC,IAAV,oEACZ+C,MAKA6U,GAAkB7X,KAAOC,IAAV,iKAMjB,qBAAGiC,MAAkBU,aAAaE,MAMhCgV,GAAe9X,KAAOC,IAAV,sSAWd,qBAAGiC,MAAkBU,aAAaE,MA4TvBiV,GA3SS,WACtB,IAAQC,EAASlB,eAATkB,KACAvP,EAAajB,eAAbiB,SACA9H,EAAMC,eAAND,EACR,EAA0CsX,eAA5BC,EAAd,EAAQjC,KAAekC,EAAvB,EAAuBA,eACjBpP,EAAaC,eACnB,EAA0B9D,oBAAS,IAAnC,oBAAOkT,EAAP,KAAcC,EAAd,KACA,EAAgCC,aAAgBjZ,EAASoY,MAAO,mBAAhE,oBAAOL,EAAP,KAAiBmB,EAAjB,KACQ5Q,EAAYC,eAAZD,QACR,EAAoCzC,oBAAS,OAA7C,oBAAOsT,EAAP,KAAmBC,EAAnB,KAEMC,EAAajQ,EAASC,SAAS,YAC/BiQ,EAAalQ,EAASC,SAAS,WAC/BqK,GAAY4F,IAAeD,EAEjCE,aAAiBF,GAIjB,IAAMvJ,GAAiBxH,KAAcA,GAAWwQ,EAEhD,EAAoCjT,qBAAU6N,GAA9C,oBAAO8F,EAAP,KAAmBC,EAAnB,KACA7G,sBAAU,WACR6G,GAAe/F,KACd,CAACA,IAEJ,IAAMgG,EAAcb,EAAQc,QAAO,SAACxP,GAAD,OAAuB,IAAbA,EAAKtC,KAAiC,OAApBsC,EAAKlI,aAAwB2X,aAAczP,EAAKtC,QACzGgS,EAAgBhB,EAAQc,QAAO,SAACxP,GAAD,OAAuB,IAAbA,EAAKtC,KAAiC,OAApBsC,EAAKlI,aAAwB2X,aAAczP,EAAKtC,QAC3GiS,EAAgBjB,EAAQc,QAAO,SAACxP,GAAD,OAAUyP,aAAczP,EAAKtC,QAE5DkS,EAAkBL,EAAYC,QAClC,SAACxP,GAAD,OAAUA,EAAKI,UAAY,IAAIjE,KAAU6D,EAAKI,SAAS5C,eAAewD,cAAc,MAGhF6O,EAAsBH,EAAcF,QACxC,SAACxP,GAAD,OAAUA,EAAKI,UAAY,IAAIjE,KAAU6D,EAAKI,SAAS5C,eAAewD,cAAc,MAGhF8O,EAAsBH,EAAcH,QACxC,SAACxP,GAAD,OAAUA,EAAKI,UAAY,IAAIjE,KAAU6D,EAAKI,SAAS5C,eAAewD,cAAc,MAGhF+O,EAAYzT,wBAChB,SAAC0T,GACC,IAAIC,EAA+CD,EAAe3E,KAAI,SAACrL,GACrE,IAAKA,EAAKkQ,sBAAwBlQ,EAAKgE,WAAWmM,WAChD,OAAOnQ,EAET,IAAMoQ,EAAiB,IAAIjU,KAAU6D,EAAKkQ,qBAAqBG,MAAMrQ,EAAKgE,WAAWmM,YAC/EpO,EAAMwH,EAAW+G,aAAW,IAAInU,KAAU6D,EAAKuQ,YAAahR,EAAY6Q,GAAkB,EAEhG,OAAO,6BAAKpQ,GAAZ,IAAkB+B,MAAK4B,UAAWyM,OAGpC,GAAIxB,EAAO,CACT,IAAM4B,EAAiBC,aAAS7B,EAAMlI,eACtCuJ,EAAwBA,EAAsBT,QAAO,SAACxP,GACpD,OAAOyQ,aAASzQ,EAAKa,SAAS6F,eAAexH,SAASsR,MAG1D,OAAOP,IAET,CAAC1Q,EAAYqP,EAAOrF,IAOhBmH,EAAclI,kBAAuB,MAE3C,EAAwD9M,oBAzE1B,IAyE9B,oBAAOiV,EAAP,KAA6BC,EAA7B,KACA,EAA0ClV,qBAAS,GAAnD,oBAAOmV,EAAP,KAAsBC,EAAtB,KAEMC,EAAsB/U,oBAAQ,WAClC,IAAIgV,EAAc,GAmClB,OAVIzH,IACFyH,EAA2BjB,EAAbV,EAAuBO,EAA6BL,IAEhEJ,IACF6B,EAA2BjB,EAAbV,EAAuBQ,EAAiCH,IAEpER,IACF8B,EAA2BjB,EAAbV,EAAuBS,EAAiCH,IA9BtD,SAACsB,GACjB,OAAQjC,GACN,IAAK,MACH,OAAOkC,mBAAQD,GAAO,SAACjR,GAAD,OAA+BA,EAAK+B,MAAK,QACjE,IAAK,aACH,OAAOmP,mBACLD,GACA,SAACjR,GAAD,OAAgCA,EAAKlI,WAAawC,OAAO0F,EAAKlI,WAAWqZ,MAAM,GAAI,IAAM,IACzF,QAEJ,IAAK,SACH,OAAOD,mBACLD,GACA,SAACjR,GAAD,OAAgCA,EAAKI,SAAW9F,OAAO0F,EAAKI,SAAShB,UAAY,IACjF,QAEJ,IAAK,YACH,OAAO8R,mBAAQD,GAAO,SAACjR,GAAD,OAA+B1F,OAAO0F,EAAK2D,aAAY,QAC/E,QACE,OAAOsN,GAcNG,CAAUJ,GAAaG,MAAM,EAAGR,KACtC,CACD3B,EACAO,EACAQ,EACAL,EACAC,EACApG,EACA4F,EACAD,EACAY,EACAD,EACAR,EACAO,EACAe,IAGFlI,sBAAU,WAQHoI,IACsB,IAAIQ,sBART,SAACC,GACrB,aAAgBA,EAAhB,MACUC,gBACRX,GAAwB,SAACY,GAAD,OAA2BA,EArI3B,QA0IuC,CAC/DC,WAAY,MACZC,UAAW,IAEIC,QAAQjB,EAAYhI,SACrCoI,GAAiB,MAElB,CAACC,EAAqBF,IAEzB,IAAMe,EAAUb,EAAoB1F,KAAI,SAACrL,GACvC,IAAQkE,EAAsBlE,EAAtBkE,MAAOF,EAAehE,EAAfgE,WACThO,EAAekO,EAAMD,QACrBlO,EAAoBiO,EAAWC,QAC/BhN,EAAU+I,EAAKa,UAAYb,EAAKa,SAAStI,MAAM,KAAK,GAAGuI,cA4B7D,MA3BsB,CACpBiB,IAAK,CACHlI,MAAOmG,EAAK+B,KAAO/B,EAAK+B,IAAIxH,eAAe,QAAS,CAAEE,sBAAuB,IAC7E3C,WAAYkI,EAAKlI,WACjBb,UACAjB,eACAD,oBACAwJ,aACAsF,cAAe7E,EAAK+B,KAEtB/B,KAAM,CACJkF,MAAOlF,EAAKa,SAAStI,MAAM,KAAK,GAAGmL,oBACnCyB,MAAOlO,EACPyG,IAAKsC,EAAKtC,KAEZ8H,OAAQ,CACNpG,SAAUT,aAAiB,IAAIxC,KAAU6D,EAAKI,SAAShB,WACvD1B,IAAKsC,EAAKtC,KAEZiG,UAAW,CACTA,UAAW3D,EAAK2D,WAElB7L,WAAY,CACVA,WAAYkI,EAAKlI,YAEnBwR,QAAStJ,MA8Db,OACE,uCACE,gBAAC6R,GAAA,EAAD,WACE,eAAC,KAAD,CAAStE,GAAG,KAAKvS,MAAM,MAAMG,MAAM,YAAYhD,GAAG,OAAlD,SACGhB,EAAE,WAEL,eAAC,KAAD,CAAS6D,MAAM,KAAKG,MAAM,OAA1B,SACGhE,EAAE,kDAGP,gBAAC2a,GAAA,EAAD,WACE,gBAAC5D,GAAD,WACE,gBAACI,GAAD,WACE,eAAC,GAAD,CAAYV,SAAUA,EAAUC,SAAU,SAACE,GAAD,OAAoBgB,EAAYhB,MAC1E,gBAACI,GAAD,WACE,eAAC,MAAD,CAAQ4D,QAAS1C,EAAY1V,SAAU,kBAAM2V,GAAeD,IAAarU,MAAM,OAC/E,gBAAC,KAAD,eAAQ7D,EAAE,qBAEZ,eAAC,GAAD,CAAgBiW,wBAAyByC,EAAoBmC,OAAS,OAExE,gBAAC3D,GAAD,WACE,gBAACD,GAAD,WACE,eAAC,KAAD,CAAM1M,cAAc,YAApB,SAAiCvK,EAAE,aACnC,eAAC8a,GAAA,EAAD,CACEC,QAAS,CACP,CACE/M,MAAOhO,EAAE,OACT0C,MAAO,OAET,CACEsL,MAAOhO,EAAE,OACT0C,MAAO,OAET,CACEsL,MAAOhO,EAAE,cACT0C,MAAO,cAET,CACEsL,MAAOhO,EAAE,UACT0C,MAAO,UAET,CACEsL,MAAOhO,EAAE,aACT0C,MAAO,cAGXF,SAlDiB,SAACwY,GAC9BlD,EAAckD,EAAOtY,aAoDb,gBAACuU,GAAD,CAAcpU,MAAO,CAAEoY,WAAY,IAAnC,UACE,eAAC,KAAD,CAAM1Q,cAAc,YAApB,SAAiCvK,EAAE,YACnC,eAACkb,GAAA,EAAD,CAAa1Y,SA/NC,SAAC0I,GACzBwM,EAASxM,EAAMiQ,OAAOzY,QA8N8BkB,YAAY,0BA5G5C,WACpB,GAAI6S,IAAa/X,EAASoY,OAAS2D,EAAQI,OAAQ,CACjD,IAEMtF,EAFexC,GAEQmB,KAAI,SAACC,GAAD,MAAa,CAC5CvB,GAAIuB,EAAOvB,GACXC,KAAMsB,EAAOtB,KACb7E,MAAOmG,EAAOnG,MACdoN,KAAM,SAACpV,EAAsBqV,GAC3B,OAAQlH,EAAOtB,MACb,IAAK,OACH,OAAOwI,EAAEzI,GAAK5M,EAAE4M,GAClB,IAAK,MACH,OAAI5M,EAAE4P,SAAShL,IAAIlI,OAAS2Y,EAAEzF,SAAShL,IAAIlI,MAClCS,OAAO6C,EAAE4P,SAAShL,IAAIlI,OAASS,OAAOkY,EAAEzF,SAAShL,IAAIlI,OAGvD,EACT,IAAK,SACH,OAAOsD,EAAE4P,SAASvH,OAAOpG,SAAWoT,EAAEzF,SAASvH,OAAOpG,SACxD,QACE,OAAO,IAGb6K,SAAUqB,EAAOrB,aAGnB,OAAO,eAAC,GAAD,CAAOwC,KAAMmF,EAASlF,QAASA,EAAS/G,cAAeA,IAGhE,OACE,+BACE,gBAACjO,GAAA,EAAD,WACE,eAAC,KAAD,CAAO+a,OAAK,EAACjE,KAAI,UAAKA,GAAtB,SACGuC,EAAoB1F,KAAI,SAACrL,GAAD,OACvB,eAAC,GAAD,CAAyBA,KAAMA,EAAMT,WAAYA,EAAYpB,QAASA,EAASrH,SAAS,GAAzEkJ,EAAKtC,UAGxB,eAAC,KAAD,CAAO+U,OAAK,EAACjE,KAAI,UAAKA,EAAL,YAAjB,SACGuC,EAAoB1F,KAAI,SAACrL,GAAD,OACvB,eAAC,GAAD,CAAyBA,KAAMA,EAAMT,WAAYA,EAAYpB,QAASA,EAASrH,SAAO,GAAvEkJ,EAAKtC,UAGxB,eAAC,KAAD,CAAO+U,OAAK,EAACjE,KAAI,UAAKA,EAAL,aAAjB,SACGuC,EAAoB1F,KAAI,SAACrL,GAAD,OACvB,eAAC,GAAD,CAAyBA,KAAMA,EAAMT,WAAYA,EAAYpB,QAASA,EAASrH,SAAO,GAAvEkJ,EAAKtC,eAmEzBgV,GACD,sBAAKxL,IAAKwJ,Y,iCC1YlB,kCA+CeiC,IAjC6B,SAAC,GAQtC,IAPL9Y,EAOI,EAPJA,MACAuO,EAMI,EANJA,SAMI,IALJjO,gBAKI,MALO,OAKP,MAJJyY,kBAII,MAJS,IAIT,MAHJC,cAGI,MAHK,GAGL,MAFJzX,YAEI,aADJD,aACI,MADI,OACJ,EACJ,EAA4B4M,qBAAW,CACrCC,MAAO,EACPC,IAAKpO,EACLqO,SAAU,EACVC,UAAW,IACXC,cAEe5N,IAAb4N,EAAyBA,EAAWvO,EAAQ,EAAI,EAAIA,EAAQ,IAAM,EAAI,IAPlEwO,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAUXC,EAAcC,iBAAOF,GAM3B,OAJAG,qBAAU,WACRF,EAAYG,QAAQ7O,KACnB,CAACA,EAAO0O,IAGT,eAAC,IAAD,CAAMnN,KAAMA,EAAMjB,SAAUA,EAAUH,MAAO,CAAE4Y,cAAczX,MAAOA,EAApE,UACG0X,EACAxK,O,oECjCQxI,IANkC,SAACiD,GAChD,OACE,cAAC,IAAD,aAAW3I,SAAS,OAAOyY,WAAW,MAAMzX,MAAM,aAAa0X,OAAO,KAAKzX,MAAM,EAAOgN,SAAU,GAAOtF,M,mHCyBvGgQ,EAAetc,IAAOC,IAAV,+DACN,SAACqM,GAAD,OAAWA,EAAMiQ,QAClB,SAACjQ,GAAD,OAAWA,EAAMiQ,QAGbC,EA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDG,EAAYC,qBAAWC,KAAvBF,QAGR,OAAQH,GACN,IAAK,KACHE,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MACF,IAAK,KACL,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACJ,EAAD,CAAcC,KAAME,KCJvBI,EAAqB7c,IAAOC,IAAV,qIAEF,SAACqM,GAAD,OAAWA,EAAMpK,MAAMC,OAAO2a,eAGvC,SAACxQ,GAAD,OAAWA,EAAMpK,MAAMwa,QAAQ,MAGtCK,EAAoB/c,IAAOC,IAAV,wCAIRqG,EA1BgB,SAAC,GAAkB,IAAhB+M,EAAe,EAAfA,SAC1B2J,EAAI5H,IAAM6H,SAASC,QAAQ7J,GAAUmI,OAC3C,OACE,cAACqB,EAAD,UACGzH,IAAM6H,SAASpI,IAAIxB,GAAU,SAAC8J,EAAOC,GAAR,OAC5B,qCACE,cAACL,EAAD,UAAoBI,IACnBC,EAAIJ,EAAI,GAAK,cAAC,EAAD,c,mFCFlBjd,EAAUC,IAAOC,IAAV,sJAOD,qBAAGiC,MAAkBC,OAAOiN,WAIlCrB,EAAkE,SAAC,GAA2B,IAAzBtJ,EAAwB,EAAxBA,QAASqI,EAAe,EAAfA,SAC1EnM,EAAMC,cAAND,EAER,OACE,eAACZ,EAAD,CAAS,aAAYY,EAAE,mCAAoC0c,KAAK,SAAS5Y,QAAS,kBAAMA,KAAxF,UACE,cAAC,IAAD,CAAME,MAAM,UAAUC,MAAI,EAA1B,SACcjE,EAAXmM,EAAa,OAAY,aAE3BA,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAKtCiB,EAAwBuP,aAAe,CACrCxQ,UAAU,GAGGiB","file":"static/js/5.acc67fed.chunk.js","sourcesContent":["export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APR: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nimport { getWvlxAddress } from './addressHelpers'\r\n\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const wvlxAddressString = getWvlxAddress()\r\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\r\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\r\n  const firstPart =\r\n    !quoteTokenAddressString || quoteTokenAddressString === wvlxAddressString ? 'VLX' : quoteTokenAddressString\r\n  const secondPart = !tokenAddressString || tokenAddressString === wvlxAddressString ? 'VLX' : tokenAddressString\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, LinkExternal, Skeleton } from '@wagyu-swap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  velasScanAddress?: string\r\n  infoAddress?: string\r\n  removed?: boolean\r\n  totalValueFormatted?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  velasScanAddress,\r\n  infoAddress,\r\n  removed,\r\n  totalValueFormatted,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Total Liquidity')}:</Text>\r\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\r\n      </Flex>\r\n      {!removed && (\r\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\r\n      )}\r\n      <StyledLinkExternal href={velasScanAddress}>{t('View Contract')}</StyledLinkExternal>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@wagyu-swap-libs/uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          <MultiplierTag variant=\"primary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = (balance: string) => {\r\n    if (isBalanceZero) {\r\n      return '0'\r\n    }\r\n    const balanceNumber = Number(balance)\r\n    if (balanceNumber > 0 && balanceNumber < 0.0001) {\r\n      return balanceNumber.toLocaleString(undefined, { maximumFractionDigits: 20 })\r\n    }\r\n    return balanceNumber.toLocaleString()\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput\r\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n            inputMode=\"decimal\"\r\n            step=\"any\"\r\n            min=\"0\"\r\n            onChange={onChange}\r\n            placeholder=\"0\"\r\n            value={value}\r\n          />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {t('Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          {t('No tokens to stake')}:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {t('Get %symbol%', { symbol })}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal, LinkExternal } from '@wagyu-swap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={t('Stake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\r\n        {t('Get %symbol%', { symbol: tokenName })}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@wagyu-swap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React, { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@wagyu-swap-libs/uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n  const location = useLocation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\r\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceNumber.toLocaleString()\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return stakedBalance.eq(0) ? (\r\n      <Button\r\n        onClick={onPresentDeposit}\r\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n      >\r\n        {t('Stake LP')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton\r\n          variant=\"tertiary\"\r\n          onClick={onPresentDeposit}\r\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n        >\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { usePriceWagyuVusdt } from 'state/hooks'\r\nimport CardVusdtValue from '../../../Home/components/CardVusdtValue'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const wagyuPrice = usePriceWagyuVusdt()\r\n  const dispatch = useAppDispatch()\r\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n  const earningsVusdt = rawEarningsBalance ? new BigNumber(rawEarningsBalance).multipliedBy(wagyuPrice).toNumber() : 0\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\r\n        {displayBalance}\r\n        {earningsVusdt > 0 && <CardVusdtValue value={earningsVusdt} />}\r\n      </Heading>\r\n      <Button\r\n        disabled={rawEarningsBalance === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onReward()\r\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text } from '@wagyu-swap-libs/uikit'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getVls20Contract } from 'utils/contractHelpers'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  provider?: ProviderType\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = farm\r\n  const {\r\n    allowance: allowanceAsString = 0,\r\n    tokenBalance: tokenBalanceAsString = 0,\r\n    stakedBalance: stakedBalanceAsString = 0,\r\n    earnings: earningsAsString = 0,\r\n  } = farm.userData || {}\r\n  const allowance = new BigNumber(allowanceAsString)\r\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\r\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\r\n  const earnings = new BigNumber(earningsAsString)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const web3 = useWeb3()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const lpContract = getVls20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {t('Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          WAGYU\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@wagyu-swap-libs/uikit'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  wagyuPrice?: BigNumber\r\n  apr?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, wagyuPrice, apr, addLiquidityUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\r\n      tokenPrice={wagyuPrice.toNumber()}\r\n      apr={apr}\r\n      linkHref={addLiquidityUrl}\r\n    />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@wagyu-swap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { getVelasScanAddressUrl } from 'utils/velasScan'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst AccentGradient = keyframes`  \r\n  0% {\r\n    background-position: 50% 0%;\r\n  }\r\n  50% {\r\n    background-position: 50% 100%;\r\n  }\r\n  100% {\r\n    background-position: 50% 0%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\r\n  background-size: 400% 400%;\r\n  animation: ${AccentGradient} 2s linear infinite;\r\n  border-radius: 32px;\r\n  position: absolute;\r\n  top: -1px;\r\n  right: -1px;\r\n  bottom: -3px;\r\n  left: -1px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\r\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  wagyuPrice?: BigNumber\r\n  provider?: ProviderType\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, wagyuPrice, account }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // We assume the token name is coin pair + lp e.g. WAGYU-VLX LP, LINK-VLX LP,\r\n  // NAR-WAGYU LP. The images should be wagyu-vlx.svg, link-vlx.svg, nar-wagyu.svg\r\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n\r\n  const totalValueFormatted =\r\n    farm.liquidity && farm.liquidity.gt(0)\r\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : ''\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANWAGYU', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'WAGYU'\r\n\r\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: farm.quoteToken.address,\r\n    tokenAddress: farm.token.address,\r\n  })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const isPromotedFarm = farm.token.symbol === 'WAGYU'\r\n\r\n  return (\r\n    <FCard isPromotedFarm={isPromotedFarm}>\r\n      {isPromotedFarm && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={farm.isCommunity}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.token.symbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{t('APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apr ? (\r\n              <>\r\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} wagyuPrice={wagyuPrice} apr={farm.apr} />\r\n                {farmAPR}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Earn')}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          velasScanAddress={getVelasScanAddressUrl(farm.lpAddresses[process.env.REACT_APP_CHAIN_ID])}\r\n          infoAddress={`https://wagyuswap.info/pair/${lpAddress}`}\r\n          totalValueFormatted={totalValueFormatted}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\r\nimport { Address } from 'config/constants/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { Skeleton } from '@wagyu-swap-libs/uikit'\r\n\r\nexport interface AprProps {\r\n  value: string\r\n  multiplier: string\r\n  lpLabel: string\r\n  tokenAddress?: Address\r\n  quoteTokenAddress?: Address\r\n  wagyuPrice: BigNumber\r\n  originalValue: number\r\n  hideButton?: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  button {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    svg {\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textSubtle};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AprWrapper = styled.div`\r\n  text-align: left;\r\n  margin-right: 4px;\r\n`\r\n\r\nconst Apr: React.FC<AprProps> = ({\r\n  value,\r\n  lpLabel,\r\n  tokenAddress,\r\n  quoteTokenAddress,\r\n  wagyuPrice,\r\n  originalValue,\r\n  hideButton = false,\r\n}) => {\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  return originalValue !== 0 ? (\r\n    <Container>\r\n      {originalValue ? (\r\n        <>\r\n          <AprWrapper>{value}%</AprWrapper>\r\n          {!hideButton && (\r\n            <ApyButton lpLabel={lpLabel} wagyuPrice={wagyuPrice} apr={originalValue} addLiquidityUrl={addLiquidityUrl} />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <AprWrapper>\r\n          <Skeleton width={60} />\r\n        </AprWrapper>\r\n      )}\r\n    </Container>\r\n  ) : (\r\n    <Container>\r\n      <AprWrapper>{originalValue}%</AprWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text, Image } from '@wagyu-swap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\n\r\nexport interface FarmProps {\r\n  label: string\r\n  pid: number\r\n  image: string\r\n}\r\n\r\nconst IconImage = styled(Image)`\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\r\n  const { stakedBalance } = useFarmUser(pid)\r\n  const { t } = useTranslation()\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n\r\n  const handleRenderFarming = (): JSX.Element => {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\r\n          {t('Farming')}\r\n        </Text>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\r\n      <div>\r\n        {handleRenderFarming()}\r\n        <Text bold>{label}</Text>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton } from '@wagyu-swap-libs/uikit'\r\n\r\nexport interface EarnedProps {\r\n  earnings: number\r\n  pid: number\r\n}\r\n\r\ninterface EarnedPropsWithLoading extends EarnedProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Amount = styled.span<{ earned: number }>`\r\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\r\n  if (userDataReady) {\r\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\r\n  }\r\n  return (\r\n    <Amount earned={0}>\r\n      <Skeleton width={60} />\r\n    </Amount>\r\n  )\r\n}\r\n\r\nexport default Earned\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, useMatchBreakpoints } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface DetailsProps {\r\n  actionPanelToggled: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 8px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 0px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 20px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const isMobile = !isXl\r\n\r\n  return (\r\n    <Container>\r\n      {!isMobile && t('Details')}\r\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Skeleton, useTooltip } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface MultiplierProps {\r\n  multiplier: string\r\n}\r\n\r\nconst MultiplierWrapper = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  width: 32px;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\r\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\r\n  const { t } = useTranslation()\r\n  const tooltipContent = (\r\n    <div>\r\n      {t('The multiplier represents the amount of WAGYU rewards each farm gets.')}\r\n      <br />\r\n      <br />\r\n      {t('For example, if a 1x farm was getting 1 WAGYU per block, a 40x farm would be getting 40 WAGYU per block.')}\r\n    </div>\r\n  )\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\r\n    placement: 'top-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Multiplier\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface LiquidityProps {\r\n  liquidity: BigNumber\r\n}\r\n\r\nconst LiquidityWrapper = styled.div`\r\n  min-width: 26px;\r\n  font-weight: 600;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\r\n  const displayLiquidity =\r\n    liquidity && liquidity.gt(0) ? (\r\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    ) : (\r\n      <Skeleton width={60} />\r\n    )\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Total value of the funds in this farm’s liquidity pool'),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <LiquidityWrapper>\r\n        <Text>{displayLiquidity}</Text>\r\n      </LiquidityWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Liquidity\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 48px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Title = styled.span`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\n// TODO: Use `Text` instead\r\nexport const Subtle = styled.span`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nexport const Earned = styled.div`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\nexport const Staked = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Skeleton } from '@wagyu-swap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { usePriceWagyuVusdt } from 'state/hooks'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCountUp } from 'react-countup'\r\n\r\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\r\n\r\ninterface HarvestActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\r\n  const earningsBigNumber = new BigNumber(userData.earnings)\r\n  const wagyuPrice = usePriceWagyuVusdt()\r\n  let earnings = 0\r\n  let earningsVusdt = 0\r\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\r\n\r\n  // If user didn't connect wallet default balance will be 0\r\n  if (!earningsBigNumber.isZero()) {\r\n    earnings = getBalanceNumber(earningsBigNumber)\r\n    earningsVusdt = new BigNumber(earnings).multipliedBy(wagyuPrice).toNumber()\r\n    displayBalance = earnings.toLocaleString()\r\n  }\r\n\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: earningsVusdt,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals: 3,\r\n  })\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(earningsVusdt)\r\n  }, [earningsVusdt, updateValue])\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Title>WAGYU </Title>\r\n        <Subtle>{t('Earned').toUpperCase()}</Subtle>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <div>\r\n          <Earned>{displayBalance}</Earned>\r\n          {countUp > 0 && <Staked>~{countUp}USD</Staked>}\r\n        </div>\r\n        <Button\r\n          disabled={!earnings || pendingTx || !userDataReady}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n\r\n            setPendingTx(false)\r\n          }}\r\n          ml=\"4px\"\r\n        >\r\n          {t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton } from '@wagyu-swap-libs/uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport { getVls20Contract } from 'utils/contractHelpers'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport { useAppDispatch } from 'state'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport useWeb3 from 'hooks/useWeb3'\r\n\r\nimport DepositModal from '../../DepositModal'\r\nimport WithdrawModal from '../../WithdrawModal'\r\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\r\n  pid,\r\n  lpSymbol,\r\n  lpAddresses,\r\n  quoteToken,\r\n  token,\r\n  userDataReady,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n  const web3 = useWeb3()\r\n  const location = useLocation()\r\n\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: quoteToken.address,\r\n    tokenAddress: token.address,\r\n  })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\r\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceNumber.toLocaleString()\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\r\n  )\r\n  const lpContract = getVls20Contract(lpAddress, web3)\r\n  const dispatch = useAppDispatch()\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{t('Start Farming').toUpperCase()}</Subtle>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (isApproved) {\r\n    if (stakedBalance.gt(0)) {\r\n      return (\r\n        <ActionContainer>\r\n          <ActionTitles>\r\n            <Title>{lpSymbol} </Title>\r\n            <Subtle>{t('Staked').toUpperCase()}</Subtle>\r\n          </ActionTitles>\r\n          <ActionContent>\r\n            <div>\r\n              <Earned>{displayBalance()}</Earned>\r\n            </div>\r\n            <IconButtonWrapper>\r\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n                <MinusIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={onPresentDeposit}\r\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            </IconButtonWrapper>\r\n          </ActionContent>\r\n        </ActionContainer>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{t('Stake').toUpperCase()} </Subtle>\r\n          <Title>{lpSymbol}</Title>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button\r\n            width=\"100%\"\r\n            onClick={onPresentDeposit}\r\n            variant=\"secondary\"\r\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n          >\r\n            {t('Stake LP')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataReady) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{t('Start Farming').toUpperCase()}</Subtle>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Subtle>{t('Enable Farm').toUpperCase()}</Subtle>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n          {t('Enable')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LinkExternal, Text } from '@wagyu-swap-libs/uikit'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getVelasScanAddressUrl } from 'utils/velasScan'\r\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\r\n\r\nimport HarvestAction from './HarvestAction'\r\nimport StakedAction from './StakedAction'\r\nimport Apr, { AprProps } from '../Apr'\r\nimport Multiplier, { MultiplierProps } from '../Multiplier'\r\nimport Liquidity, { LiquidityProps } from '../Liquidity'\r\n\r\nexport interface ActionPanelProps {\r\n  apr: AprProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n  userDataReady: boolean\r\n  expanded: boolean\r\n}\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 500px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 500px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ expanded }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column-reverse;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst StakeContainer = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst TagsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  > div {\r\n    height: 24px;\r\n    padding: 0 6px;\r\n    font-size: 14px;\r\n    margin-right: 4px;\r\n\r\n    svg {\r\n      width: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  min-width: 200px;\r\n`\r\n\r\nconst ValueContainer = styled.div`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ValueWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 4px 0px;\r\n`\r\n\r\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\r\n  details,\r\n  apr,\r\n  multiplier,\r\n  liquidity,\r\n  userDataReady,\r\n  expanded,\r\n}) => {\r\n  const farm = details\r\n\r\n  const { t } = useTranslation()\r\n  const isActive = farm.multiplier !== '0X'\r\n  const { quoteToken, token, dual } = farm\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('WAGYU', '')\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: quoteToken.address,\r\n    tokenAddress: token.address,\r\n  })\r\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const velas = getVelasScanAddressUrl(lpAddress)\r\n  const info = `https://wagyuswap.info/pair/${lpAddress}`\r\n\r\n  return (\r\n    <Container expanded={expanded}>\r\n      <InfoContainer>\r\n        {isActive && (\r\n          <StakeContainer>\r\n            <StyledLinkExternal href={`https://dp1n7z0335ni0.cloudfront.net/#/add/${liquidityUrlPathParts}`}>\r\n              {t('Get %symbol%', { symbol: lpLabel })}\r\n            </StyledLinkExternal>\r\n          </StakeContainer>\r\n        )}\r\n        <StyledLinkExternal href={velas}>{t('View Contract')}</StyledLinkExternal>\r\n        <TagsContainer>\r\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\r\n          {dual ? <DualTag /> : null}\r\n        </TagsContainer>\r\n      </InfoContainer>\r\n      <ValueContainer>\r\n        <ValueWrapper>\r\n          <Text>{t('APR')}</Text>\r\n          <Apr {...apr} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Multiplier')}</Text>\r\n          <Multiplier {...multiplier} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Liquidity')}</Text>\r\n          <Liquidity {...liquidity} />\r\n        </ValueWrapper>\r\n      </ValueContainer>\r\n      <ActionContainer>\r\n        <HarvestAction {...farm} userDataReady={userDataReady} />\r\n        <StakedAction {...farm} userDataReady={userDataReady} />\r\n      </ActionContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Label = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  text-align: left;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  min-height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface CellLayoutProps {\r\n  label?: string\r\n}\r\n\r\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\r\n  return (\r\n    <div>\r\n      {label && <Label>{label}</Label>}\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CellLayout\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useMatchBreakpoints } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport { useFarmUser } from 'state/hooks'\r\n\r\nimport Apr, { AprProps } from './Apr'\r\nimport Farm, { FarmProps } from './Farm'\r\nimport Earned, { EarnedProps } from './Earned'\r\nimport Details from './Details'\r\nimport Multiplier, { MultiplierProps } from './Multiplier'\r\nimport Liquidity, { LiquidityProps } from './Liquidity'\r\nimport ActionPanel from './Actions/ActionPanel'\r\nimport CellLayout from './CellLayout'\r\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\r\n\r\nexport interface RowProps {\r\n  apr: AprProps\r\n  farm: FarmProps\r\n  earned: EarnedProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\ninterface RowPropsWithLoading extends RowProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst cells = {\r\n  apr: Apr,\r\n  farm: Farm,\r\n  earned: Earned,\r\n  details: Details,\r\n  multiplier: Multiplier,\r\n  liquidity: Liquidity,\r\n}\r\n\r\nconst CellInner = styled.div`\r\n  padding: 24px 0px;\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding-right: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst StyledTr = styled.tr`\r\n  cursor: pointer;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst EarnedMobileCell = styled.td`\r\n  padding: 16px 0 24px 16px;\r\n`\r\n\r\nconst AprMobileCell = styled.td`\r\n  padding-top: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst FarmMobileCell = styled.td`\r\n  padding-top: 24px;\r\n`\r\n\r\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\r\n  const { details, userDataReady } = props\r\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\r\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\r\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\r\n  const { t } = useTranslation()\r\n\r\n  const toggleActionPanel = () => {\r\n    setActionPanelExpanded(!actionPanelExpanded)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setActionPanelExpanded(hasStakedAmount)\r\n  }, [hasStakedAmount])\r\n\r\n  const { isXl, isXs } = useMatchBreakpoints()\r\n\r\n  const isMobile = !isXl\r\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\r\n  const columnNames = tableSchema.map((column) => column.name)\r\n\r\n  const handleRenderRow = () => {\r\n    if (!isXs) {\r\n      return (\r\n        <StyledTr onClick={toggleActionPanel}>\r\n          {Object.keys(props).map((key) => {\r\n            const columnIndex = columnNames.indexOf(key)\r\n            if (columnIndex === -1) {\r\n              return null\r\n            }\r\n\r\n            switch (key) {\r\n              case 'details':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout>\r\n                        <Details actionPanelToggled={actionPanelExpanded} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'apr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t('APR')}>\r\n                        <Apr {...props.apr} hideButton={isMobile} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              default:\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\r\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n            }\r\n          })}\r\n        </StyledTr>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <StyledTr onClick={toggleActionPanel}>\r\n        <td>\r\n          <tr>\r\n            <FarmMobileCell>\r\n              <CellLayout>\r\n                <Farm {...props.farm} />\r\n              </CellLayout>\r\n            </FarmMobileCell>\r\n          </tr>\r\n          <tr>\r\n            <EarnedMobileCell>\r\n              <CellLayout label={t('Earned')}>\r\n                <Earned {...props.earned} userDataReady={userDataReady} />\r\n              </CellLayout>\r\n            </EarnedMobileCell>\r\n            <AprMobileCell>\r\n              <CellLayout label={t('APR')}>\r\n                <Apr {...props.apr} hideButton />\r\n              </CellLayout>\r\n            </AprMobileCell>\r\n          </tr>\r\n        </td>\r\n        <td>\r\n          <CellInner>\r\n            <CellLayout>\r\n              <Details actionPanelToggled={actionPanelExpanded} />\r\n            </CellLayout>\r\n          </CellInner>\r\n        </td>\r\n      </StyledTr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {handleRenderRow()}\r\n      {shouldRenderChild && (\r\n        <tr>\r\n          <td colSpan={6}>\r\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport Row, { RowProps } from './Row'\r\n\r\nexport interface ITableProps {\r\n  data: RowProps[]\r\n  columns: ColumnType<RowProps>[]\r\n  userDataReady: boolean\r\n  sortColumn?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  filter: ${({ theme }) => theme.card.dropShadow};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: 16px;\r\n  margin: 16px 0px;\r\n`\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow: visible;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n`\r\n\r\nconst TableBody = styled.tbody`\r\n  & tr {\r\n    td {\r\n      font-size: 16px;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`\r\n\r\nconst TableContainer = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst FarmTable: React.FC<ITableProps> = (props) => {\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const { t } = useTranslation()\r\n  const { data, columns, userDataReady } = props\r\n\r\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\r\n\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TableContainer>\r\n        <TableWrapper ref={tableWrapperEl}>\r\n          <StyledTable>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </TableWrapper>\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </TableContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FarmTable\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface FarmTabButtonsProps {\r\n  hasStakeInFinishedFarms: boolean\r\n}\r\n\r\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\r\n  const { url } = useRouteMatch()\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n\r\n  let activeIndex\r\n  switch (location.pathname) {\r\n    case '/farms':\r\n      activeIndex = 0\r\n      break\r\n    case '/farms/history':\r\n      activeIndex = 1\r\n      break\r\n    case '/farms/archived':\r\n      activeIndex = 2\r\n      break\r\n    default:\r\n      activeIndex = 0\r\n      break\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {t('Live')}\r\n        </ButtonMenuItem>\r\n        <NotificationDot show={hasStakeInFinishedFarms}>\r\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n            {t('Finished')}\r\n          </ButtonMenuItem>\r\n        </NotificationDot>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@wagyu-swap-libs/uikit'\r\nimport { ViewMode } from '../types'\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, RowType, Toggle, Text } from '@wagyu-swap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePollFarmsData, usePriceWagyuVusdt } from 'state/hooks'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { orderBy } from 'lodash'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport { latinise } from 'utils/latinise'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\n// const StyledImage = styled(Image)`\r\n//   margin-left: auto;\r\n//   margin-right: auto;\r\n//   margin-top: 58px;\r\n// `\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const wagyuPrice = usePriceWagyuVusdt()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, 'wagyu_farm_view')\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n\r\n  const isArchived = pathname.includes('archived')\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive && !isArchived\r\n\r\n  usePollFarmsData(isArchived)\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\r\n  useEffect(() => {\r\n    setStakedOnly(!isActive)\r\n  }, [isActive])\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedArchivedFarms = archivedFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\r\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.vusdtPrice) {\r\n          return farm\r\n        }\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.vusdtPrice)\r\n        const apr = isActive ? getFarmApr(new BigNumber(farm.poolWeight), wagyuPrice, totalLiquidity) : 0\r\n\r\n        return { ...farm, apr, liquidity: totalLiquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\r\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    [wagyuPrice, query, isActive],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n\r\n  const farmsStakedMemoized = useMemo(() => {\r\n    let farmsStaked = []\r\n\r\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n      switch (sortOption) {\r\n        case 'apr':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\r\n        case 'multiplier':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\r\n            'desc',\r\n          )\r\n        case 'earned':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\r\n            'desc',\r\n          )\r\n        case 'liquidity':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n        default:\r\n          return farms\r\n      }\r\n    }\r\n\r\n    if (isActive) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n    if (isInactive) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n    if (isArchived) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\r\n    }\r\n\r\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    sortOption,\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    archivedFarms,\r\n    isActive,\r\n    isInactive,\r\n    isArchived,\r\n    stakedArchivedFarms,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const showMoreFarms = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [farmsStakedMemoized, observerIsSet])\r\n\r\n  const rowData = farmsStakedMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm\r\n    const tokenAddress = token.address\r\n    const quoteTokenAddress = quoteToken.address\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase()\r\n    const row: RowProps = {\r\n      apr: {\r\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        wagyuPrice,\r\n        originalValue: farm.apr,\r\n      },\r\n      farm: {\r\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStakedMemoized.map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} wagyuPrice={wagyuPrice} account={account} removed={false} />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsStakedMemoized.map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} wagyuPrice={wagyuPrice} account={account} removed />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/archived`}>\r\n            {farmsStakedMemoized.map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} wagyuPrice={wagyuPrice} account={account} removed />\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n          {t('Farms')}\r\n        </Heading>\r\n        <Heading scale=\"lg\" color=\"text\">\r\n          {t('Stake Liquidity Pool (LP) tokens to earn.')}\r\n        </Heading>\r\n      </PageHeader>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\r\n              <Text> {t('Staked only')}</Text>\r\n            </ToggleWrapper>\r\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\r\n              <Select\r\n                options={[\r\n                  {\r\n                    label: t('Hot'),\r\n                    value: 'hot',\r\n                  },\r\n                  {\r\n                    label: t('APR'),\r\n                    value: 'apr',\r\n                  },\r\n                  {\r\n                    label: t('Multiplier'),\r\n                    value: 'multiplier',\r\n                  },\r\n                  {\r\n                    label: t('Earned'),\r\n                    value: 'earned',\r\n                  },\r\n                  {\r\n                    label: t('Liquidity'),\r\n                    value: 'liquidity',\r\n                  },\r\n                ]}\r\n                onChange={handleSortOptionChange}\r\n              />\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\r\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        <div ref={loadMoreRef} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@wagyu-swap-libs/uikit'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '40px',\r\n  lineHeight = '1',\r\n  prefix = '',\r\n  bold = true,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport CardValue, { CardValueProps } from './CardValue'\r\n\r\nconst CardVusdtValue: React.FC<CardValueProps> = (props) => {\r\n  return (\r\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\r\n  )\r\n}\r\n\r\nexport default CardVusdtValue\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? t('Hide') : t('Details')}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n"],"sourceRoot":""}
